<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BoldReports.AspNet.Core</name>
    </assembly>
    <members>
        <member name="P:BoldReports.TagHelpers.PropertiesBase.Create">
            <summary>
            Triggers when Control is created.
            </summary>
        </member>
        <member name="P:BoldReports.TagHelpers.PropertiesBase.Destroy">
            <summary>
            Triggers when control is destroyed.
            </summary>
        </member>
        <member name="P:BoldReports.TagHelpers.PropertiesBase.CssClass">
            <summary>
            Specifies class to define custom theme
            </summary>
            <value>
             The cssClass.
            </value>
        </member>
        <member name="T:BoldReports.CRUDModel`1">
            <summary>
            Used to model bind the values while performing CRUD operation using DataManager. 
            </summary>
            <typeparam name="T">The element type used by the record from the request body</typeparam>
        </member>
        <member name="P:BoldReports.CRUDModel`1.Action">
            <summary>
            Specifies the action initiated the request. 
            </summary>
        </member>
        <member name="P:BoldReports.CRUDModel`1.Table">
            <summary>
            Specifies the Table name(if any) to be updated.
            </summary>
        </member>
        <member name="P:BoldReports.CRUDModel`1.KeyColumn">
            <summary>
            Specifies the Primary key column name.
            </summary>
        </member>
        <member name="P:BoldReports.CRUDModel`1.Key">
            <summary>
            Specifies the Primary key value.
            </summary>
        </member>
        <member name="P:BoldReports.CRUDModel`1.Value">
            <summary>
            Specifies the modified/added record.
            </summary>
        </member>
        <member name="P:BoldReports.CRUDModel`1.Added">
            <summary>
            Specifies the List&lt;&gt; added records while batch editing.
            </summary>
            <remarks>The Added property will holds values on batch editing only</remarks>
        </member>
        <member name="P:BoldReports.CRUDModel`1.Changed">
            <summary>
            Specifies the List&lt;&gt; updated records while batch editing.
            </summary>
            <remarks>The Changed property will holds values on batch editing only</remarks>
        </member>
        <member name="P:BoldReports.CRUDModel`1.Deleted">
            <summary>
            Specifies the List&lt;&gt; deleted records while batch editing.
            </summary>
            <remarks>The Deleted property will holds values on batch editing only</remarks>
        </member>
        <member name="P:BoldReports.CRUDModel`1.Params">
            <summary>
            Holds the additional parameters passed.
            </summary>
        </member>
        <member name="T:BoldReports.CRUDModel">
            <summary>
            Used to model bind the values while performing CRUD operation using DataManager. 
            </summary>    
        </member>
        <member name="P:BoldReports.CRUDModel.Action">
            <summary>
            Specifies the action initiated the request. 
            </summary>
        </member>
        <member name="P:BoldReports.CRUDModel.Table">
            <summary>
            Specifies the Table name(if any) to be updated.
            </summary>
        </member>
        <member name="P:BoldReports.CRUDModel.KeyColumn">
            <summary>
            Specifies the Primary key column name.
            </summary>
        </member>
        <member name="P:BoldReports.CRUDModel.Key">
            <summary>
            Specifies the Primary key value.
            </summary>
        </member>
        <member name="P:BoldReports.CRUDModel.Value">
            <summary>
            Specifies the modified/added record.
            </summary>
        </member>
        <member name="P:BoldReports.CRUDModel.Added">
            <summary>
            Specifies the list of added records while batch editing.
            </summary>
            <remarks>The Added property will holds values on batch editing only</remarks>
        </member>
        <member name="P:BoldReports.CRUDModel.Changed">
            <summary>
            Specifies the list of updated records while batch editing.
            </summary>
            <remarks>The Changed property will holds values on batch editing only</remarks>
        </member>
        <member name="P:BoldReports.CRUDModel.Deleted">
            <summary>
            Specifies the list of deleted records while batch editing.
            </summary>
            <remarks>The Deleted property will holds values on batch editing only</remarks>
        </member>
        <member name="P:BoldReports.CRUDModel.Params">
            <summary>
            Holds the additional parameters passed.
            </summary>
        </member>
        <member name="T:BoldReports.ReportingControls">
            <summary>
            Partial class for ReportDesigner.
            </summary>
            <summary>
            Partial class for ReportViewer.
            </summary>
        </member>
        <member name="M:BoldReports.ReportingControls.ReportDesigner(System.String)">
            <summary>
            Initializes the new instance for Report Designer Control.
            </summary>
            <param name="id">Gets the control id as string.</param>
            <returns>It returns the <see cref="T:BoldReports.ReportDesignerPropertiesBuilder" />, contains report designer control properties information.</returns>
        </member>
        <member name="M:BoldReports.ReportingControls.ReportDesigner(System.String,BoldReports.Models.ReportDesignerProperties)">
            <summary>
            Gets or sets a value that indicates the report designer model.
            </summary>
            <param name="id">Gets the control id as string.</param>
            <param name="model">Gets the report designer properties.</param>
            <returns>It returns the <see cref="T:BoldReports.ReportDesigner" /> instance.</returns>
        </member>
        <member name="M:BoldReports.ReportingControls.ReportViewer(System.String)">
            <summary>
            Extension for the ReportViewer control.
            </summary>
            <param name="id">The identifier.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportingControls.ReportViewer(System.String,BoldReports.Models.ReportViewerProperties)">
            <summary>
            Extension for the ReportViewer control.
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
            <returns>ReportViewer.</returns>
        </member>
        <member name="T:BoldReports.Models.FilteredColumn">
            <summary>
            Gets or sets a value that indicates whether to define the filtered columns details programmatically at initial load.
            </summary>
        </member>
        <member name="P:BoldReports.Models.FilteredColumn.Field">
            <summary>
            Gets or sets a value that indicates whether to define the field name of the column to be filter.
            </summary>
        </member>
        <member name="P:BoldReports.Models.FilteredColumn.MatchCase">
            <summary>
            Gets or sets a value that indicates whether casing should be ignored or considered.
            </summary>
        </member>
        <member name="P:BoldReports.Models.FilteredColumn.Operator">
            <summary>
            Gets or sets a value that indicates whether to define the filter condition to filtered column.
            </summary>
        </member>
        <member name="P:BoldReports.Models.FilteredColumn.Predicate">
            <summary>
            Gets or sets a value that indicates whether to define the predicate as and/or.
            </summary>		
        </member>
        <member name="P:BoldReports.Models.FilteredColumn.Value">
            <summary>
            Gets or sets a value that indicates whether to define the value to be filtered in a column.
            </summary>		
        </member>
        <member name="T:BoldReports.Models.SearchSettings">
            <summary>
            Gets or sets an object that indicates whether to customize the searching behavior of the grid.
            </summary>	
        </member>
        <member name="P:BoldReports.Models.SearchSettings.Key">
            <summary>
            This specifies the grid to search the particular data that is mentioned in the key.
            </summary>
        </member>
        <member name="P:BoldReports.Models.SearchSettings.SearchKey">
            <summary>
            This specifies the grid to search the particular data that is mentioned in the key.
            </summary>
        </member>
        <member name="P:BoldReports.Models.SearchSettings.Fields">
            <summary>
            This specify the grid to search for the value in particular columns that is mentioned in the field.
            </summary>
        </member>
        <member name="P:BoldReports.Models.SearchSettings.SearchFields">
            <summary>
            This specify the grid to search for the value in particular columns that is mentioned in the field.
            </summary>
        </member>
        <member name="P:BoldReports.Models.SearchSettings.Operator">
            <summary>
            It specifies the grid to search the records based on operator.
            </summary>
        </member>
        <member name="P:BoldReports.Models.SearchSettings.IgnoreCase">
            <summary>
            It enables or disables case-sensitivity while searching the search key in grid.
            </summary>
        </member>
        <member name="T:BoldReports.Models.SortedColumn">
            <summary>
            Gets or sets a value that indicates whether to define the direction and field to sort the column.
            </summary>	
        </member>
        <member name="P:BoldReports.Models.SortedColumn.Field">
            <summary>
            Gets or sets a value that indicates whether to define the field name of the column to be sort.
            </summary>
        </member>
        <member name="P:BoldReports.Models.SortedColumn.Direction">
            <summary>
            Gets or sets a value that indicates whether to define the direction to sort the column.
            </summary>
        </member>
        <member name="M:BoldReports.Models.StringObjectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the ConvertFrom method of TypeConverter.
            </summary>
            <param name="itdContext">It accepts the ITypeDescriptorContext and display</param>
            <param name="type">It accepts the Type and display</param>
            <returns>It returns the Boolean</returns>
        </member>
        <member name="M:BoldReports.Models.StringObjectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
            <param name="itdContext">It accepts the ITypeDescriptorContext and display</param>
            <param name="type">It accepts the Type and display</param>
            <returns>It returns the Boolean</returns>
        </member>
        <member name="M:BoldReports.Models.StringObjectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            The ConvertFrom method of TypeConverter.
            </summary>
            <param name="itdContext">It accepts the ITypeDescriptorContext and display</param>
            <param name="cultureInfo">It accepts the CultureInfo and display</param>
            <param name="value">It accepts the Object and display</param>
            <returns>It returns the Object</returns>
        </member>
        <member name="M:BoldReports.Models.StringObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            The ConvertTo method of TypeConverter.
            </summary>
            <param name="itdContext">It accepts the ITypeDescriptorContext and display</param>
            <param name="cultureInfo">It accepts the CultureInfo and display</param>
            <param name="value">It accepts the Object and display</param>
            <param name="type">It accepts the Type and display</param>
            <returns>It returns the Object</returns>
        </member>
        <member name="M:BoldReports.Models.StlConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
            <param name="context">It accepts ITypeDescriptorContext</param>
            <param name="sourceType">It accepts Type</param>
            <returns>The method returns a Boolean.</returns>
        </member>
        <member name="M:BoldReports.Models.StlConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            The ConvertFrom method of TypeConverter.
            </summary>
            <param name="context">It accepts ITypeDescriptorContext</param>
            <param name="culture">It accepts CultureInfo</param>
            <param name="value">It accepts Object</param>
            <returns>The method returns a Object.</returns>
        </member>
        <member name="M:BoldReports.Models.StlConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
            <param name="context">It accepts Object and displays</param>
            <param name="destinationType">It accepts Object and displays</param>
            <returns>It returns the Boolean</returns>
        </member>
        <member name="M:BoldReports.Models.StlConverter.FromString(System.String)">
            <summary>
            To remove the empty entries from the list of String.
            </summary>
            <param name="value">It accepts the String and displays</param>
            <returns>It return String</returns>
        </member>
        <member name="M:BoldReports.Models.StlConverter.FromInt(System.String)">
            <summary>
            To remove the empty entries from the list of Int.
            </summary>
            <param name="value">It accepts the Integer and display</param>
            <returns>It return the Interger</returns>
        </member>
        <member name="M:BoldReports.Models.StlConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
            <param name="context">It accepts the ITypeDescriptorContext and display</param>
            <param name="culture">It accepts the CultureInfo and display</param>
            <param name="value">It accepts the Object and display</param>
            <param name="destinationType">It accepts the Type and display</param>
            <returns>It returns the Object</returns>
        </member>
        <member name="T:BoldReports.Models.DataTypeTypeConverter">
            <summary>
            Provides a type converter to convert <see cref="T:System.Type"/> objects to and from string representations.
            </summary>
        </member>
        <member name="M:BoldReports.Models.DataTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the ConvertFrom method of TypeConverter.
            </summary>
            <param name="context">It accepts and display</param>
            <param name="sourceType">It accepts Type and display</param>
            <returns>It returns the Boolean</returns>
        </member>
        <member name="M:BoldReports.Models.DataTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
            <param name="context">It accepts ITypeDescriptorContext and display</param>
            <param name="destinationType">It accepts Type and display</param>
            <returns>It returns the Boolean</returns>
        </member>
        <member name="M:BoldReports.Models.DataTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Overrides the ConvertFrom method of TypeConverter.
            </summary>
            <param name="context">It accepts ITypeDescriptorContext and display</param>
            <param name="culture">It accepts CultureInfo and display</param>
            <param name="value">It accepts Object and display</param>
            <returns>It returns the Object</returns>
        </member>
        <member name="M:BoldReports.Models.DataTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
            <param name="context">It accepts the ITypeDescriptorContext and display</param>
            <param name="culture">It accepts the CultureInfo and display</param>
            <param name="value">It accepts the Object and display</param>
            <param name="destinationType">It accepts the Type and display</param>
            <returns>It returns the Object</returns>
        </member>
        <member name="M:BoldReports.Models.DataTypeTypeConverter.GetString(System.Type)">
            <summary>
            Gets the value of String as number or datetime.
            </summary>
            <param name="type">It accepts the Type and display</param>
            <returns>It returns the String</returns>
        </member>
        <member name="T:BoldReports.Models.ReportDesigner.ConfigurePaneSettings">
            <summary>
            Contains properties and methods to handle report designer configure pane settings.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportDesigner.ConfigurePaneSettings.ShowConfigurePane">
            <summary>
            Shows or hides the configuration pane in ReportDesigner control.
            </summary>
            <value><c>true</c> if [show configurePane]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesigner.ConfigurePaneSettings.Items">
            <summary>
            Shows or hides the grouped items in the configuration pane with the help of <see cref="T:BoldReports.ReportDesignerEnums.ConfigurePaneItems" /> enum .
            </summary>
            <value>Specify the list of items to be enabled in configuration pane.</value>
        </member>
        <member name="T:BoldReports.Models.ReportDesigner.PermissionSettings">
            <summary>
            Contains properties and methods to handle report designer permission settings.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportDesigner.PermissionSettings.DataSet">
            <summary>
            Gets or sets the permission settings for data set.
            </summary>
            <value>Specify the permission settings for data set, <see cref="T:BoldReports.ReportDesignerEnums.Permission" /> </value>
        </member>
        <member name="P:BoldReports.Models.ReportDesigner.PermissionSettings.DataSource">
            <summary>
            Gets or sets the permission settings for data source.
            </summary>
            <value>Specify the permission settings for data source, <see cref="T:BoldReports.ReportDesignerEnums.Permission" /> </value>
        </member>
        <member name="T:BoldReports.Models.ReportDesigner.ReportDataExtensionsModule">
            <summary>
            Contains properties to handle report designer custom data extensions configuration.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportDesigner.ReportDataExtensionsModule.Name">
            <summary>
            Gets or sets the name of the datasource type.
            </summary>
            <value>Specify the data source type as string value.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesigner.ReportDataExtensionsModule.ClassName">
            <summary>
            Gets or sets the prototype name of the data extension item.
            </summary>
            <value>Specify the prototype name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesigner.ReportDataExtensionsModule.ImageClass">
            <summary>
            Gets or sets css class name to render image in the tile view.
            </summary>
            <value>Specify the css class name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesigner.ReportDataExtensionsModule.DisplayName">
            <summary>
            Gets or sets the name for data extension item to display in the data pane tile.
            </summary>
            <value>Specify the display name for data extension item as string.</value>
        </member>
        <member name="T:BoldReports.Models.ReportDesigner.ReportItemExtensionsModule">
            <summary>
            Contains properties to handle report designer custom report items configuration.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportDesigner.ReportItemExtensionsModule.Name">
            <summary>
            Gets or sets the name of the custom report item.
            </summary>
            <value>Specify the name of the custom report item as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesigner.ReportItemExtensionsModule.ClassName">
            <summary>
            Gets or sets the prototype name of the report item.
            </summary>
            <value>Specify the prototype name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesigner.ReportItemExtensionsModule.ImageClass">
            <summary>
            Gets or sets the image class name to load image in widgets pane tile.
            </summary>
            <value>Specify the css class name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesigner.ReportItemExtensionsModule.DisplayName">
            <summary>
            Gets or sets the name for custom report item to display in the widgets pane tile.
            </summary>
            <value>Specify the custom report item name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesigner.ReportItemExtensionsModule.Category">
            <summary>
            Gets or sets the category name to create/add category in widgets pane for report item.
            </summary>
            <value>Specify the category name as string.</value>
        </member>
        <member name="T:BoldReports.Models.ReportDesigner.ToolbarSettings">
            <summary>
            Contains properties to handle report designer toolbar settings.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportDesigner.ToolbarSettings.ShowToolbar">
            <summary>
            Shows or hides the toolbar.
            </summary>
            <value><c>true</c> if [show toolbar]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesigner.ToolbarSettings.Items">
            <summary>
            Shows or hides the grouped items in the toolbar with the help of <see cref="T:BoldReports.ReportDesignerEnums.ToolbarItems" /> enum.
            </summary>
            <value>Specify the list of items to be enabled in toolbar.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesigner.ToolbarSettings.TemplateId">
            <summary>
            Gets or sets the toolbar template ID.
            </summary>
            <value>Specify the template id for toolbar as string.</value>
        </member>
        <member name="M:BoldReports.Models.ReportDesigner.ToolbarSettings.ShouldTemplateId">
            <summary>
            Checks whether the TemplateId should serialize or not.
            </summary>
            <returns>Returns <see langword="true"/> if TemplateId property is configured for toolbar; otherwise, <see langword="false"/>. </returns>
        </member>
        <member name="T:BoldReports.Models.ReportDesignerProperties">
            <summary>
            Contains properties and methods to perform get and set actions for Report Designer properties.
            </summary>
        </member>
        <member name="M:BoldReports.Models.ReportDesignerProperties.GetControlDetails">
            <summary>
            Get the Report Designer control details.
            </summary>
            <returns>Returns the instance of <see cref="T:BoldReports.ReportDesigner" /> class.</returns>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.ServiceUrl">
            <summary>
            Gets or sets the URL of the WebAPI service; it will be used for processing the report.
            </summary>
            <value>Specify the service URL as string value.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.Locale">
            <summary>
            Gets or sets the locale for report designer.
            </summary>
            <value>Specify the language code as string value.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.Destroy">
            <summary>
            Fires when the report designer is destroyed successfully. If you want to perform any operation after destroying the report designer control,you can make use of the destroy event.
            </summary>
            <value>Gets the destroy event.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.ReportPath">
            <summary>
            Gets or sets the path of report.
            </summary>
            <value>Specify the report path as string value.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.ReportServerUrl">
            <summary>
            Gets or sets the report server url.
            </summary>
            <value>Specify the server URL as string value.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.ServiceAuthorizationToken">
            <summary>
            Gets or sets the token to access the Report Server API services.
            </summary>
            <value>Specify the service authorization token as string value.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.ToolbarSettings">
            <summary>
            Gets or sets settings of the Report Designer toolbar.
            </summary>
            <value>Define the report designer toolbar settings as <see cref="T:BoldReports.Models.ReportDesigner.ToolbarSettings" /> object.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.ConfigurePaneSettings">
            <summary>
            Gets or sets the settings to show or hide the items of configuration pane in Report Designer control.
            </summary>
            <value>Define the report designer configure pane settings as <see cref="T:BoldReports.Models.ReportDesigner.ConfigurePaneSettings" />object.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.ReportType">
            <summary>
            Gets or sets the report type.
            </summary>
            <value>Specify the value as <see cref="T:BoldReports.ReportDesignerEnums.ReportType" /></value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.PermissionSettings">
            <summary>
            Gets or sets the settings to show or hide options in data source and dataset panels.
            </summary>
            <value>Define the report designer permission settings as <see cref="T:BoldReports.Models.ReportDesigner.PermissionSettings" />object.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.AjaxBeforeLoad">
            <summary>
             Fires before AJAX loads, If you want to perform any operation before AJAX event,you can make use of the ajaxBeforeLoad event.
            </summary>
            <value>Gets or sets the ajaxBeforeLoad event name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.AjaxError">
            <summary>
            Fires when AJAX result is failed.
            </summary>
            <value>Gets or sets the ajaxError event name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.AjaxSuccess">
            <summary>
            Fires when AJAX result is succeeded.
            </summary>
            <value>Gets or sets the ajaxSuccess event name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.Create">
            <summary>
            Fires when the Report Designer widget is created.
            </summary>
            <value>Gets or sets the create event name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.OpenReportClick">
            <summary>
            Fires while clicking open menu items in toolbar.
            </summary>
            <value>Gets or sets the openReportClick event name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.NewDataClick">
            <summary>
            Fires while clicking new data button in data panel.
            </summary>
            <value>Gets or sets the newDataClick event name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.PreviewReport">
            <summary>
            Fires while clicking the preview button.
            </summary>
            <value>Gets or sets the previewReport event name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.ReportModified">
            <summary>
            Fires when the report is modified.
            </summary>
            <value>Gets or sets the reportModified event name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.ReportOpened">
            <summary>
            Fires when the report is opened.
            </summary>
            <value>Gets or sets the reportOpened event name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.ReportSaved">
            <summary>
            Fires when the report is saved.
            </summary>
            <value>Gets or sets the reportSaved event name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.SaveReportClick">
            <summary>
            Fires while clicking save menu items in toolbar.
            </summary>
            <value>Gets or sets the saveReportClick event name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.ToolbarClick">
            <summary>
            Fires while clicking the toolbar items.
            </summary>
            <value>Gets or sets the toolbarClick event name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.ToolbarRendering">
            <summary>
            Fires while rendering the Report Designer toolbar.
            </summary>
            <value>Gets or sets the toolbarRendering event name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.ExtensionLocaleChanged">
            <summary>
            Fires when the specified locale key was not present in report designer locale.
            </summary>
            <value>Gets or sets the extensionLocaleChanged event name as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.ReportItemExtensions">
            <summary>
            Gets or sets the list of custom report items.
            </summary>
            <value>Specify the custom report items information as list of <see cref="T:BoldReports.Models.ReportDesigner.ReportItemExtensionsModule" /></value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.ReportDataExtensions">
            <summary>
            Gets or sets the list of datasource extensions.
            </summary>
            <value>Specify the datasource extensions information as list of <see cref="T:BoldReports.Models.ReportDesigner.ReportDataExtensionsModule" />.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.WaitingPopupTemplate">
            <summary>
            Gets or sets the custom template for waiting popup in report designer.
            </summary>
            <value>Specify the waiting popup template as string.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.EnableImpersonate">
            <summary>
            Gets or sets the Impersonate option for report designer datasources.
            </summary>
            <value>Enable or Disable Impersonate option for report designer datasources.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.ReportVersion">
            <summary>
            Gets or sets the schema version of the report.
            </summary>
            <value>Specify the version as <see cref="T:BoldReports.ReportDesignerEnums.ReportVersion" /> enum type.</value>
        </member>
        <member name="P:BoldReports.Models.ReportDesignerProperties.FontNames">
            <summary>
            Gets or sets the custom font strings.
            </summary>
            <value>Specify the custom fonts as array of string.</value>
        </member>
        <member name="M:BoldReports.Models.ReportDesignerProperties.ShouldSerializeReportDataExtensions">
            <summary>
             Checks whether the report data extensions should serialize or not.
            </summary>
            <returns>Returns <see langword="true"/> if custom data extensions are configured for report designer; otherwise, <see langword="false"/>. </returns>
        </member>
        <member name="M:BoldReports.Models.ReportDesignerProperties.ShouldSerializeReportItemExtensions">
            <summary>
             Checks whether the report item extensions should serialize or not.
            </summary>
            <returns>Returns <see langword="true"/> if custom report items are configured for report designer; otherwise, <see langword="false"/>. </returns>
        </member>
        <member name="M:BoldReports.Models.ReportDesignerProperties.ShouldSerializeToolbar">
            <summary>
            Checks whether the toolbar should serialize or not.
            </summary>
            <returns>Returns <see langword="true"/> if toolbar settings are configured for report designer; otherwise, <see langword="false"/>. </returns>
        </member>
        <member name="M:BoldReports.Models.ReportDesignerProperties.ShouldSerializeLocale">
            <summary>
             Checks whether the locale should serialize or not.
            </summary>
            <returns>Returns <see langword="true"/> if locale is configured for report designer; otherwise, <see langword="false"/>. </returns>
        </member>
        <member name="M:BoldReports.Models.ReportDesignerProperties.ShouldSerializeReportpath">
            <summary>
             Checks whether the reportpath should serialize or not.
            </summary>
            <returns>Returns <see langword="true"/> if report paths is configured for report designer; otherwise, <see langword="false"/>. </returns>
        </member>
        <member name="M:BoldReports.Models.ReportDesignerProperties.ShouldSerializeFontNames">
            <summary>
             Checks whether the fontNames should serialize or not.
            </summary>
            <returns>Returns <see langword="true"/> if custom font names property is configured for report designer; otherwise, <see langword="false"/>. </returns>
        </member>
        <member name="M:BoldReports.Models.ReportDesignerProperties.ShouldSerializeReportServerUrl">
            <summary>
             Checks whether the reportServerUrl should serialize or not.
            </summary>
            <returns>Returns <see langword="true"/> if report server URL property is configured for report designer; otherwise, <see langword="false"/>. </returns>
        </member>
        <member name="M:BoldReports.Models.ReportDesignerProperties.ShouldSerializeServiceAuthorizationToken">
            <summary>
            Checks whether the serviceAuthorizationToken should serialize or not.
            </summary>
            <returns>Returns <see langword="true"/> if service authorization property is configured for report designer; otherwise, <see langword="false"/>. </returns>
        </member>
        <member name="M:BoldReports.Models.ReportDesignerProperties.ShouldSerializeServiceUrl">
            <summary>
            Checks whether the serviceUrl should serialize or not.
            </summary>
            <returns>Returns <see langword="true"/> if service Url property is configured for report designer; otherwise, <see langword="false"/>. </returns>
        </member>
        <member name="M:BoldReports.Models.ReportViewer.PageMarginsBuilder.#ctor(BoldReports.Models.ReportViewer.Margins)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.PageSettingsBuilder"/> class.
            </summary>
            <param name="PageSettings">The page settings.</param>
        </member>
        <member name="M:BoldReports.Models.ReportViewer.PageMarginsBuilder.Top(System.Double)">
            <summary>
            Specifies the paper margin Top of print layout.
            </summary>
            <param name="value">The value.</param>
            <returns>PageMarginsBuilder.</returns>
        </member>
        <member name="M:BoldReports.Models.ReportViewer.PageMarginsBuilder.Right(System.Double)">
            <summary>
            Specifies the paper margin Right of print layout.
            </summary>
            <param name="value">The value.</param>
            <returns>PageMarginsBuilder.</returns>
        </member>
        <member name="M:BoldReports.Models.ReportViewer.PageMarginsBuilder.Bottom(System.Double)">
            <summary>
            Specifies the paper margin Bottom of print layout.
            </summary>
            <param name="value">The value.</param>
            <returns>PageMarginsBuilder.</returns>
        </member>
        <member name="M:BoldReports.Models.ReportViewer.PageMarginsBuilder.Left(System.Double)">
            <summary>
            Specifies the paper margin Left of print layout.
            </summary>
            <param name="value">The value.</param>
            <returns>PageMarginsBuilder.</returns>
        </member>
        <member name="T:BoldReports.Models.ReportViewer.ExportSettings">
            <summary>
            Class for ExportSettings.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ExportSettings.ExcelFormat">
            <summary>
            Specifies the excel export format.
            </summary>
            <value>The excel version.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ExportSettings.ExportOptions">
            <summary>
            Specifies the export options.
            </summary>
            <value>The export options.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ExportSettings.WordFormat">
            <summary>
            Specifies the word export format.
            </summary>
            <value>The type of the word format.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ExportSettings.ImageQuality">
            <summary>
            Specifies the image quality required to export the reports with data visualization items in high or Low quality.
            </summary>
            <value>An integer that represents the 1 to 10.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ExportSettings.PPTFormat">
            <summary>
            Specifies the ppt export format.
            </summary>
            <value>The type of the ppt format.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ExportSettings.CustomItems">
            <summary>
            Add the custom items in export options.
            </summary>
            <value>The customItems.</value>
        </member>
        <member name="T:BoldReports.Models.ReportViewer.CustomExportItem">
            <summary>
            Class for CustomExportItem.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.CustomExportItem.Index">
            <summary>
            Gets or sets the index of the custom export item.
            </summary>
            <value>The custom item index.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.CustomExportItem.CssClass">
            <summary>
            Gets or sets the css class of the custom export item.
            </summary>
            <value>The custom item css class.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.CustomExportItem.Value">
            <summary>
            Gets or sets the value of the custom export item.
            </summary>
            <value>The custom item value</value>
        </member>
        <member name="T:BoldReports.Models.ReportViewer.Margins">
            <summary>
            Class for Margin.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.Margins.Top">
            <summary>
            Specifies the top of paper margin in print layout.
            </summary>
            <value>The top of paper margin.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.Margins.Right">
            <summary>
            Specifies the right of paper margin in print layout.
            </summary>
            <value>The right of paper margin.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.Margins.Bottom">
            <summary>
            Specifies the bottom of paper margin in print layout.
            </summary>
            <value>The bottom of paper margin.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.Margins.Left">
            <summary>
            Specifies the left of paper margin in print layout.
            </summary>
            <value>The left of paper margin.</value>
        </member>
        <member name="T:BoldReports.Models.ReportViewer.PageSettings">
            <summary>
            Class for ToolbarSettings.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.PageSettings.Orientation">
            <summary>
            Specifies the print layout orientation.
            </summary>
            <value>The Paper Orientation.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.PageSettings.PaperSize">
            <summary>
            Specifies the paper size of print layout.
            </summary>
            <value>The Paper Size.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.PageSettings.Height">
            <summary>
            Specifies the height of paper in print layout.
            </summary>
            <value>The paper height.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.PageSettings.Width">
            <summary>
            Specifies the width of paper in print layout.
            </summary>
            <value>The paper width.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.PageSettings.Margins">
            <summary>
            Specifies the paper margins of print layout.
            </summary>
            <value>The paper margin.</value>
        </member>
        <member name="T:BoldReports.Models.ReportViewer.ParameterSettings">
            <summary>
            Class for ParameterSettings.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ParameterSettings.DelimiterChar">
            <summary>
            The special character which acts as a separator for the selected multivalue parameter values.
            </summary>
            <value>The delimiterChar.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ParameterSettings.PopupHeight">
            <summary>
            Specifies the height of the combobox parameter popup list. By default, the popup height value is 152px.
            </summary>
            <value>The popupHeight.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ParameterSettings.PopupWidth">
            <summary>
            Specifies the width of the combobox parameter popup list. By default, the popup width sets based on the width of the component.
            </summary>
            <value>The popupWidth.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ParameterSettings.ItemWidth">
            <summary>
            Specifies the width of the parameter item. By default, the item width value is set as 185px.
            </summary>
            <value>The itemWidth.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ParameterSettings.LabelWidth">
            <summary>
            Specifies the width of the parameter label. By default, the parameter label width value is set as 110px.
            </summary>
            <value>The labelWidth.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ParameterSettings.DateTimePickerType">
            <summary>
            Enable or Disable Changing Date and Time picker for report viewer.
            </summary>
            <value>The enable date time picker.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ParameterSettings.HideParameterBlock">
            <summary>
            Show or hide the parameter block on initial report rendering.
            </summary>
            <value>Indicates whether the parameter block needs to be shown or not.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ParameterSettings.AccessInternalValue">
            <summary>
            Provides access to get the hidden or internal report parameter information
            </summary>
            <value>Boolean value indicates whether the user can access the hidden or internal parameter information or not.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ParameterSettings.MinDateTime">
            <summary>
            Specifies the minimum date time in the date parameter that the user can select. By default, the MinDateTime value is set as null.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ParameterSettings.MaxDateTime">
            <summary>
            Specifies the maximum date time in the date parameter that the user can select. By default, the MaxDateTime value is set as null.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ParameterSettings.TimeDisplayFormat">
            <summary>
            Defines the time format displayed in the time dropdown inside the DateTimePicker popup.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ParameterSettings.DateTimeFormat">
            <summary>
            Defines the datetime format displayed in the DateTimePicker.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ParameterSettings.TimeInterval">
            <summary>
            Sets the time interval between the two adjacent time values in the DateTimepicker time popup.
            </summary>
        </member>
        <member name="T:BoldReports.Models.ReportViewer.ReportDataSource">
            <summary>
            Class for ReportDataSource.
            </summary>
        </member>
        <member name="M:BoldReports.Models.ReportViewer.ReportDataSource.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.Models.ReportViewer.ReportDataSource"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ReportDataSource.Name">
            <summary>
            Gets or sets the name of the data source.
            </summary>
            <value>The DataSource name.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ReportDataSource.Value">
            <summary>
            Gets or sets the values of data source.
            </summary>
            <value>The DataSource value.</value>
        </member>
        <member name="T:BoldReports.Models.ReportViewer.ReportParameter">
            <summary>
            Class for ReportParameter.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ReportParameter.Name">
            <summary>
            Gets or sets the name of the parameter.
            </summary>
            <value>The Parameter name.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ReportParameter.Prompt">
            <summary>
            Gets or sets the prompt message associated with the specified parameter.
            </summary>
            <value>The Parameter prompt.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ReportParameter.Nullable">
            <summary>
            Gets or sets whether the parameter allows nullable value or not.
            </summary>
            <value><c>true</c> if nullable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ReportParameter.Values">
            <summary>
            Gets or sets the parameter values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ReportParameter.Labels">
            <summary>
            Gets or sets the parameter labels.
            </summary>
            <value>The labels.</value>
        </member>
        <member name="T:BoldReports.Models.ReportViewer.ToolbarSettings">
            <summary>
            Class for ToolbarSettings.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ToolbarSettings.ShowToolbar">
            <summary>
            Shows or hides the toolbar.
            </summary>
            <value><c>true</c> if [show toolbar]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ToolbarSettings.Items">
            <summary>
            Specifies the toolbar items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ToolbarSettings.ShowTooltip">
            <summary>
            Shows or hides the tooltip of toolbar items.
            </summary>
            <value><c>true</c> if [show tooltip]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ToolbarSettings.TemplateId">
            <summary>
            Specifies the toolbar template ID.
            </summary>
            <value>The template identifier.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ToolbarSettings.Click">
            <summary>
            Fires when user click on toolbar item in the toolbar.
            </summary>
            <value>The click.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ToolbarSettings.CustomItems">
            <summary>
            Add the custom items in the toolbar.
            </summary>
            <value>The customItems.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ToolbarSettings.CustomGroups">
            <summary>
            Add the custom Groups in the toolbar.
            </summary>
            <value>The customGroups.</value>
        </member>
        <member name="T:BoldReports.Models.ReportViewer.CustomGroup">
            <summary>
            Class for CustomGroup.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.CustomGroup.Items">
            <summary>
            Gets or sets the items of the toolbar custom group.
            </summary>
            <value>The custom group items</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.CustomGroup.GroupIndex">
            <summary>
            Gets or sets the group index of the toolbar custom group.
            </summary>
            <value>The custom group index.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.CustomGroup.CssClass">
            <summary>
            Gets or sets the css class of the toolbar custom groups.
            </summary>
            <value>The custom group css class.</value>
        </member>
        <member name="T:BoldReports.Models.ReportViewer.CustomItem">
            <summary>
            Class for CustomItem.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.CustomItem.GroupIndex">
            <summary>
            Gets or sets the group index of the toolbar custom item.
            </summary>
            <value>The custom item group index.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.CustomItem.Index">
            <summary>
            Gets or sets the index of the toolbar custom item.
            </summary>
            <value>The custom item index.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.CustomItem.CssClass">
            <summary>
            Gets or sets the css class of the toolbar custom item.
            </summary>
            <value>The custom item css class.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.CustomItem.Id">
            <summary>
            Gets or sets the id of the toolbar custom item.
            </summary>
            <value>The custom item id</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.CustomItem.Value">
            <summary>
            Gets or sets the value of the Tool bar item.
            </summary>
            <value>The value of custom tool bar item.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.CustomItem.Type">
            <summary>
            Gets or sets the type of the toolbar custom item.
            </summary>
            <value>The custom item type</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.CustomItem.Tooltip">
            <summary>
            Gets or sets the tooltip of the toolbar custom item.
            </summary>
            <value>The custom item tooltip</value>
        </member>
        <member name="T:BoldReports.Models.ReportViewer.ToolTip">
            <summary>
            Class for ToolTip.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ToolTip.Header">
            <summary>
            Gets or sets the header of the toolbar custom item tooltip.
            </summary>
            <value>The custom item tooltip header.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewer.ToolTip.Content">
            <summary>
            Gets or sets the content of the toolbar custom item tooltip.
            </summary>
            <value>The custom item tooltip content.</value>
        </member>
        <member name="T:BoldReports.Models.ReportViewerProperties">
            <summary>
            Class for ReportViewer Properties.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ReportServiceUrl">
            <summary>
            Specifies the report Web API service url.
            </summary>
            <value>The report service URL.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ServiceAuthorizationToken">
            <summary>
            Authenticate the User Token.
            </summary>
            <value>Authorization Token.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ReportPath">
            <summary>
            Gets or sets the path of the report file.
            </summary>
            <value>The report path.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.EnableVirtualEvaluation">
            <summary>
            Gets or sets a value indicating whether enables or disables virtual report processing. This will help to process the report to handle the larger amount of data with less memory footprint.
            </summary>
            <value>The default value is false.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.IsResponsive">
            <summary>
            Gets or sets the boolean value of isResponsive Property when window resized.
            </summary>
            <value>The is responsive</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.WaitingPopupTemplate">
            <summary>
            Gets or sets the waiting popup template for Report viewer.
            </summary>
            <value>The waitingPopup Template.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ReportServerUrl">
            <summary>
            Gets or sets the report server URL.
            </summary>
            <value>The report server URL.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ReportLoaded">
            <summary>
            Fires when the report is loaded.If you want to perform any operation after the successful loading of report, you can make use of the reportLoaded event.
            </summary>
            <value>The report loaded.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ToolbarRendering">
            <summary>
            Fires while rendering the Report Viewer toolbar.If you want to perform any operation when rendering toolbar,you can make use of the toolbarRendering event.
            </summary>
            <value>Gets or sets the toolbarRendering event.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ViewReportClick">
            <summary>
            Fires when click the ViewReport.If you want to modify the current parameter collection while viewReport click, you can make use of the viewReportClick event.
            </summary>
            <value>The view report click.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ParameterUpdateStateChange">
            <summary>
            Fires when the dependent parameter value is changing in the parameter block. You can add custom user interface, loading indicator and modify the default progress text, using the ParameterUpdateStateChange event.
            </summary>
            <value>The view report click.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ReportError">
            <summary>
            Fires when any error occurred while rendering the report.If you want to perform any operation when an error occurs in the report, you can make use of the reportError event.
            </summary>
            <value>The report error.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ReportExport">
            <summary>
             Fires when the Report Export Event Occured.If you want to perform any operation when a report Export action is performed, you can make use of the reportExport event.
            </summary>
            <value>The report export.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ExportProgressChanged">
            <summary>
             Fires when the Export progress is changed.If you want to perform any operation when a Export progress is changed, you can make use of the exportProgressChanged event.
            </summary>
            <value>The exportProgress Changed.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.BeforeParameterAdd">
            <summary>
             Fires when the parameter UI element added before in the paramter block. If you want to add the custom paramter UI element to the parameter block, you can make use of the beforeParameterAdd event.
            </summary>
            <value>The parameter add before.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.PrintProgressChanged">
            <summary>
             Fires when the Print progress changed.If you want to perform any operation when a Print progress is changed, you can make use of the printProgressChanged event.
            </summary>
            <value>The printProgress Changed.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ExportItemClick">
            <summary>
             Fires when the Export items is clicked.If you want to perform any operation when a Export items clicked, you can make use of the exportItemClick event.
            </summary>
            <value>The exportItem Click.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ToolBarItemClick">
            <summary>
             Fires when the Toolbar items is clicked.If you want to perform any operation when a Toolbar items clicked, you can make use of the toolBarItemClick event.
            </summary>
            <value>The toolBarItem Click.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.RenderingBegin">
            <summary>
            Fires before report rendering is completed.If you want to perform any operation before the rendering of report,you can make use of the renderingBegin event.
            </summary>
            <value>The rendering begin.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.RenderingComplete">
            <summary>
            Fires after report rendering completed.If you want to perform any operation after the rendering of report,you can make use of this renderingComplete event.
            </summary>
            <value>The rendering complete.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.DrillThrough">
            <summary>
            Fires during drill through action done in report.If you want to perform any operation when a drill through action is performed, you can make use of the drillThrough event.
            </summary>
            <value>The drill through.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.Hyperlink">
            <summary>
            Fires when a user clicks a hyperlink in the report. If you want to do any customization before performing an action that is specified in the report, you can make use of the event.
            </summary>
            <value>The hyperlink.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.AjaxBeforeLoad">
            <summary>
             Fires when ajax call is initiated.If you want to perform any operation when ajax initiated,you can make use of the ajaxBeforeLoad event.
            </summary>
            <value>The rendering begin.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.AjaxSuccess">
            <summary>
            Fires when an ajax request is successfully completed. If you want to perform any operation after the ajax request success, you can make use of the ajaxSuccess event.
            </summary>
            <value>The ajax success.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.AjaxError">
            <summary>
             Fires when ajax request is completes with an error. If you want to perform any operation when ajax request fails, you can make use of the ajaxError event.
            </summary>
            <value>The ajax error.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ProcessingMode">
            <summary>
            Specifies the processing mode of the report.
            </summary>
            <value>The processing mode.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ZoomFactor">
            <summary>
            Gets or sets the zoom factor for report viewer.
            </summary>
            <value>The zoom factor.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.EnablePageCache">
            <summary>
            Gets or sets the enablePageCache for report viewer.
            </summary>
            <value>The enable page cache</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.EnablePageVirtualization">
            <summary>
            Gets or sets the enablePageVirtualization for report viewer.
            </summary>
            <value>The enable page virutualization</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.EnableParameterBlockScroller">
            <summary>
            Gets or sets the enableParameterBlockScroller for report viewer.
            </summary>
            <value>The enable Parameter Block scroller</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.SizeToReportContent">
            <summary>
            Gets or sets the sizeToReportContent for report viewer.
            </summary>
            <value>Render the ReportViewer height based on container size.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.AutoRender">
            <summary>
            Gets or sets the autoRender for report viewer.
            </summary>
            <value>The enable ReportViewer render</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.EnableDatasourceBlockScroller">
            <summary>
            Gets or sets the enableDatasourceBlockScroller for report viewer.
            </summary>
            <value>The enable Datasource Block Scroller</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.PrintMode">
            <summary>
            Gets or sets the printMode for report viewer.
            </summary>
            <value>To Specifies the printMode</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.Locale">
            <summary>
            Specifies the locale for report viewer.
            </summary>
            <value>The locale.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.Destroy">
            <summary>
            Fires when the report viewer is destroyed successfully.If you want to perform any operation after destroying the reportviewer control,you can make use of the destroy event.
            </summary>
            <value>The Destroy.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.DataSources">
            <summary>
            Gets or sets the list of data sources for the RDLC report.
            </summary>
            <value>The Data Sources.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.Parameters">
            <summary>
            Gets or sets the list of parameters associated with the report.
            </summary>
            <value>The list of parameters.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ToolbarSettings">
            <summary>
            Specifies the toolbar settings.
            </summary>
            <value>The toolbar settings.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.PageSettings">
            <summary>
            Specifies the page settings.
            </summary>
            <value>The page settings.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ParameterSettings">
            <summary>
            Specifies the parameter settings.
            </summary>
            <value>The Parameter Settings.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.RenderMode">
            <summary>
            Specifies the render layout.
            </summary>
            <value>The render mode.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.PrintOption">
            <summary>
            Specifies the print option.
            </summary>
            <value>The print option.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ExportSettings">
            <summary>
            Specifies the export settings.
            </summary>
            <value>The export settings.</value>
        </member>
        <member name="M:BoldReports.Models.ReportViewerProperties.ShouldSerializeDataSources">
            <summary>
            Specifies the render layout.
            </summary>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.EnableDropDownSearch">
            <summary>
            Specifies the enable drop down search.
            </summary>
            <value>The enable drop down search.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ShowExceptionsInDialog">
            <summary>
            Gets or sets the showExceptionsInDialog for report viewer.
            </summary>
            <value>The show exceptions in dialog.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.EnableNotificationBar">
            <summary>
            Specifies the enable notification bar.
            </summary>
            <value>The enable notification bar.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ReportPrint">
            <summary>
            Fires during report print action done in report.If you want to perform any operation when a report print action is performed, you can make use of the ReportPrint event.
            </summary>
            <value>The report print.</value>
        </member>
        <member name="P:BoldReports.Models.ReportViewerProperties.ShowError">
            <summary>
            Fires when user clicks on a failed report item in the rendered report, before displaying error details dialog. If you want to show custom error detail or perform any action before viewing error detail, you can make use of the showError event.
            </summary>
            <value>The show error.</value>
        </member>
        <member name="P:BoldReports.Control.ID">
            <summary>
            Set the DOM control element ID
            </summary>
        </member>
        <member name="P:BoldReports.Control.ClientID">
            <summary>
            ASP.NET webform alone  to generate control id based on its contentholder container
            </summary>
        </member>
        <member name="P:BoldReports.Control.UniqueID">
            <summary>
            Gets the unique identifier for the server control.
            </summary>
        </member>
        <member name="P:BoldReports.Control.Parent">
            <summary>
            Gets the logical parent element of this element.
            </summary>
        </member>
        <member name="P:BoldReports.Control.ControlType">
            <summary>
            Identifies the type of control.
            </summary>
        </member>
        <member name="P:BoldReports.Control.ServerEvents">
            <summary>
            Trigger the server events in ASP.NET web forms
            </summary>
        </member>
        <member name="F:BoldReports.Control.ServerProperties">
            <summary>
            Defines a server properties.
            </summary>
        </member>
        <member name="P:BoldReports.Control.TagName">
            <summary>
            Gets or sets the name of the tag.
            </summary>
        </member>
        <member name="P:BoldReports.Control.PluginName">
            <summary>
            Gets the plugin name of the control
            </summary>
        </member>
        <member name="P:BoldReports.Control.Output">
            <summary>
            TextWriter instance which is used to write the control string onto the page.
            </summary>
        </member>
        <member name="P:BoldReports.Control.Model">
            <summary>
            Holds the control properties
            </summary>
        </member>
        <member name="P:BoldReports.Control.Data">
            <summary>
             Holds the serialized value of the dataSource used by control.  
            </summary>
        </member>
        <member name="F:BoldReports.Control.unobtrusiveData">
            <summary>
             Used to hold the dataSource value used by the control. 
            </summary>
        </member>
        <member name="M:BoldReports.Control.CreateUnObtrusiveDataDictionary(System.Object,System.String,System.String)">
            <summary>
            Creates the un obtrusive data dictionary.
            </summary>
            <param name="inputObject">The input object.</param>
            <param name="id">The identifier.</param>
            <param name="argPluginString">The argument plugin string.</param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Control.CreateDataVariable(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates the unobtrusive data script.
            </summary>
            <param name="input">The input object.</param>       
            <returns>Returns Generated script string</returns>
        </member>
        <member name="T:BoldReports.SummaryType">
            <summary>
            Gets or sets a value that indicates the type of calculations to be performed for the corresponding summary column.
            </summary>
        </member>
        <member name="T:BoldReports.AdaptorType">
            <summary>
            This specifies the grid to apply with adaptor type for the Data Source.
            </summary>
        </member>
        <member name="T:BoldReports.Operator">
            <summary>
            Gets or sets a value that indicates whether to define the filter condition to filtered column.
            </summary>
        </member>
        <member name="T:BoldReports.HtmlTag">
            <summary>
            Provides methods for render the Html elements
            </summary>
        </member>
        <member name="M:BoldReports.HtmlTag.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.HtmlTag"/> class.
            </summary>
            <param name="tagName">Name of the tag.</param>
        </member>
        <member name="M:BoldReports.HtmlTag.#ctor(System.String,BoldReports.TagRenderMode)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.HtmlTag"/> class.
            </summary>
            <param name="tagName">Name of the tag.</param>
            <param name="renderMode">The render mode.</param>
        </member>
        <member name="M:BoldReports.HtmlTag.#ctor(System.String,System.Action{BoldReports.HtmlTag})">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.HtmlTag"/> class.
            </summary>
            <param name="tagName">Name of the tag.</param>
            <param name="configure">The configure.</param>
        </member>
        <member name="P:BoldReports.HtmlTag.ChildElements">
            <summary>
            Gets or sets the child elements.
            </summary>
            <value>The child elements.</value>
        </member>
        <member name="P:BoldReports.HtmlTag.Template">
            <summary>
            Gets or sets the template.
            </summary>
            <value>The template.</value>
        </member>
        <member name="P:BoldReports.HtmlTag.RenderMode">
            <summary>
            Gets or sets the render mode.
            </summary>
            <value>The render mode.</value>
        </member>
        <member name="M:BoldReports.HtmlTag.TagName">
            <summary>
            Used to return Tags the name.
            </summary>
            <returns>TagName of the TagBuilder</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Id(System.String)">
            <summary>
            Used to set the ID attribute to Html element
            </summary>
            <param name="id">The element id.</param>
            <returns>HtmlTag</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Add(System.Collections.Generic.IEnumerable{BoldReports.HtmlTag})">
            <summary>
            Adds the specified childs.
            </summary>
            <param name="childs">The childs.</param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Add(System.String)">
            <summary>
            Adds the specified tag.
            </summary>
            <param name="tag">The tag.</param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Add(BoldReports.HtmlTag)">
            <summary>
            Used to Add the specified child to the current instance.
            </summary>
            <param name="child">The child.</param>
            <returns>Current HtmlTag instance</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Add(System.String,System.Action{BoldReports.HtmlTag})">
            <summary>
            Used to Add the specified child to the current instance and configure the child element.
            </summary>
            <param name="tag">The tag.</param>
            <param name="configure">The action.</param>
            <returns>Current HtmlTag instance</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.InsertFirst(BoldReports.HtmlTag)">
            <summary>
            Used to insert the child element to first position.
            </summary>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:BoldReports.HtmlTag.InsertAt(System.Int32,BoldReports.HtmlTag)">
            <summary>
            Used to insert the child element to specified position.
            </summary>
            <param name="index">The index.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:BoldReports.HtmlTag.ChildElement``1">
            <summary>
            Used to add the Childs the element to current instance.
            </summary>
            <typeparam name="T">Model</typeparam>
            <returns></returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Modify(System.Action{BoldReports.HtmlTag})">
            <summary>
            Used to Modifies the current instance
            </summary>
            <param name="configure">The Action.</param>
            <returns>Current HtmlTag instance</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.FirstChild">
            <summary>
            Used to get the First child element
            </summary>
            <returns>First child element</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Attributes">
            <summary>
            Attributeses this instance.
            </summary>
            <returns>attribute collection</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.GetAttribute(System.String)">
            <summary>
            Gets the attribute.
            </summary>
            <param name="key">The key.</param>
            <returns>attribute value</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Attributes(System.Object)">
            <summary>
            Attributeses the specified attributes.
            </summary>
            <param name="attributes">The attributes.</param>
            <returns>Current HtmlTag instance</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Attributes``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Attributeses the specified attributes.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="attributes">The attributes.</param>
            <returns>Current HtmlTag instance</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Attributes``2(System.Collections.Generic.IDictionary{``0,``1},System.Boolean)">
            <summary>
            Adds an attribute to the specified collection of attributes for the tag
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="attributes">The attributes.</param>
            <param name="replaceExisting">if set to <c>true</c> [replace existing].</param>
            <returns>Current HtmlTag instance</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Attributes(System.String,System.String)">
            <summary>
             Adds an attribute to the tag by using the specified key/value pair.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>Current HtmlTag instance</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Attributes(System.String,System.String,System.Boolean)">
            <summary>
            Adds an attribute to the tag by using the specified key/value pair
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="replaceExisting">if set to <c>true</c> [replace existing].</param>
            <returns>Current HtmlTag instance</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.AddClass(System.String)">
            <summary>
            Adds the specified CSS class to the tag-builder attributes.
            </summary>
            <param name="className">Name of the class.</param>
            <returns>Current HtmlTag instance</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.AddClasses(System.String[])">
            <summary>
            Adds the array of  CSS classes to the tag-builder attributes
            </summary>
            <param name="classes">The classes.</param>
            <returns>Current HtmlTag instance</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.AddClasses(System.Collections.Generic.List{System.String})">
            <summary>
            Adds the list of  CSS classes to the tag-builder attributes
            </summary>
            <param name="classes">The classes.</param>
            <returns>Current HtmlTag instance</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Style(System.String,System.String)">
            <summary>
            Styles the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Hide">
            <summary>
            Hides this instance.
            </summary>
            <returns>Current HtmlTag instance</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Html(System.String)">
            <summary>
            HTMLs the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>Current HtmlTag instance</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Prepend(System.String)">
            <summary>
            Prepends the specified text.
            </summary>
            <param name="text">The text.</param>
            <returns>Current HtmlTag instance</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Text(System.String)">
            <summary>
            Texts the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>Current HtmlTag instance</returns>
        </member>
        <member name="M:BoldReports.HtmlTag.GetInnerHtml">
            <summary>
            Gets the inner HTML.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BoldReports.HtmlTag.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:BoldReports.HtmlTag.Render(System.IO.TextWriter)">
            <summary>
            Renders the specified writer.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:BoldReports.Shared.Serializer.SerializeObject.SerializeToJson(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serialize the object to JSON string
            </summary>
            <param name="input">The input object.</param>
            <param name="unobtrusivedata">The Dictionary to hold the datasources on unobtrusive mode</param>      
            <returns>Returns JSON string</returns>
        </member>
        <member name="M:BoldReports.Utils.EscapeString(System.String)">
            <summary>
            Escape special charaters in string literals.
            </summary>
            <param name="input">The input object.</param>        
            <returns>escaped string</returns>
            This method is added to fix the issue reported in EJMVC-2354(Unable to Escape character inside string using SerializeToJson)
        </member>
        <member name="M:BoldReports.Utils.AutoIncrementKey(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object,System.Int32)">
            <summary>
            Extension method to insert by automatically calculate the key value.
            </summary>
            <param name="inputdict">The input  dictionary</param>
            <param name="prefix">The prefix appended with the generated key</param>   
            <param name="value">The value to be added in the target dictionary</param>   
            <param name="start">Optional parameter which indicates the start of the key value. By default 0</param>   
            <returns>Returns th key with which new value added</returns>        
        </member>
        <member name="M:BoldReports.Utils.KeyValueToDictionary(System.Collections.Generic.List{BoldReports.Models.KeyValue},System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}})">
            <summary>
            Utility method to convert KeyValue collection to Dictionary collection.
            </summary>
            <param name="source">The source is the target KeyValue collection</param>   
            <param name="value">The value to be added in the target collection</param>                         
        </member>
        <member name="M:BoldReports.Linq.Data.DataSetExtensions.EscapeLikeValue(System.String)">
            <summary>
            Insert [ wildcard ] in LIKE Queries.
            http://msdn.microsoft.com/en-us/library/ms179859.aspx
            </summary>
        </member>
        <member name="M:BoldReports.Linq.Data.PropertyDescriptorExtensions.SetValue(System.ComponentModel.PropertyDescriptorCollection,System.Object,System.Object,System.String)">
            <summary>
            Sets the value for the corresponding object available in the PropertyDescriptorCollection
            </summary>
            <param name="pdc">ItemProperties</param>
            <param name="record">Record</param>
            <param name="value">Value</param>
            <param name="columnName">Mapping name of the column(Includeing complex mapping names)</param>
        </member>
        <member name="M:BoldReports.Linq.Data.PropertyDescriptorExtensions.GetPropertyDescriptor(System.ComponentModel.PropertyDescriptorCollection,System.String)">
            <summary>
            Generate the Property Descriptor for corresponding Property it may be simple or complex property
            </summary>
            <param name="pdc"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="T:BoldReports.Linq.FunctionalExtensions">
            <summary>
            Functional method extensions
            </summary>
        </member>
        <member name="M:BoldReports.Linq.FunctionalExtensions.ForEach``1(System.Collections.IEnumerable,System.Action{``0})">
            <summary>
            Iterates over an IEnumerable instance to a delegated function
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items">The items.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:BoldReports.Linq.FunctionalExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Iterates over a generic IEnumerable instance to a delegated function
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items">The items.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:BoldReports.Linq.FunctionalExtensions.IterateIndex``1(``0[],System.Action{System.Int32,``0})">
            <summary>
            Iterates the index.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items">The items.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:BoldReports.Linq.FunctionalExtensions.IterateIndex``1(System.Collections.Generic.IEnumerable{``0},System.Action{System.Int32,``0})">
            <summary>
            Iterates the index.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items">The items.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:BoldReports.Linq.FunctionalExtensions.True``1">
            <summary>
            Trues this instance.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.FunctionalExtensions.False``1">
            <summary>
            Falses this instance.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.FunctionalExtensions.Or``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Ors the specified expr1.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expr1">The expr1.</param>
            <param name="expr2">The expr2.</param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.FunctionalExtensions.And``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Ands the specified expr1.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expr1">The expr1.</param>
            <param name="expr2">The expr2.</param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.FunctionalExtensions.Fold``2(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``0},``0)">
            <summary>
            Folds the specified list.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="U"></typeparam>
            <param name="list">The list.</param>
            <param name="func">The func.</param>
            <param name="acc">The acc.</param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.FunctionalExtensions.FoldLeft``2(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``0},``0)">
            <summary>
            Folds the left.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="U"></typeparam>
            <param name="list">The list.</param>
            <param name="func">The func.</param>
            <param name="acc">The acc.</param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.FunctionalExtensions.FoldRight``2(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``0},``0)">
            <summary>
            Folds the right.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="U"></typeparam>
            <param name="list">The list.</param>
            <param name="func">The func.</param>
            <param name="acc">The acc.</param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.FunctionalExtensions.MoveTo(System.Collections.IList,System.Int32,System.Int32)">
            <summary>
            Moves to.
            </summary>
            <param name="list">The list.</param>
            <param name="src">The SRC.</param>
            <param name="dest">The dest.</param>
        </member>
        <member name="T:BoldReports.Linq.FilterType">
            <summary>
            Specifies the FilterType to be used in LINQ methods.
            </summary>
        </member>
        <member name="F:BoldReports.Linq.FilterType.LessThan">
            <summary>
            Performs LessThan operation.
            </summary>
        </member>
        <member name="F:BoldReports.Linq.FilterType.LessThanOrEqual">
            <summary>
            Performs LessThan Or Equal operation.
            </summary>
        </member>
        <member name="F:BoldReports.Linq.FilterType.Equals">
            <summary>
            Checks Equals on the operands.
            </summary>
        </member>
        <member name="F:BoldReports.Linq.FilterType.NotEquals">
            <summary>
            Checks for Not Equals on the operands.
            </summary>
        </member>
        <member name="F:BoldReports.Linq.FilterType.GreaterThanOrEqual">
            <summary>
            Checks for Greater Than or Equal on the operands.
            </summary>
        </member>
        <member name="F:BoldReports.Linq.FilterType.GreaterThan">
            <summary>
            Checks for Greater Than on the operands.
            </summary>
        </member>
        <member name="F:BoldReports.Linq.FilterType.StartsWith">
            <summary>
            Checks for StartsWith on the string operands.
            </summary>
        </member>
        <member name="F:BoldReports.Linq.FilterType.EndsWith">
            <summary>
            Checks for EndsWith on the string operands.
            </summary>
        </member>
        <member name="F:BoldReports.Linq.FilterType.Contains">
            <summary>
            Checks for Contains on the string operands.
            </summary>
        </member>
        <member name="F:BoldReports.Linq.FilterType.Undefined">
            <summary>
            Returns invalid type
            </summary>
        </member>
        <member name="F:BoldReports.Linq.FilterType.Between">
            <summary>
            Checks for Between two date on the operands.
            </summary>
        </member>
        <member name="T:BoldReports.Linq.FilterBehavior">
            <summary>
            Specifies the Filter Behaviour for the filter predicates.
            </summary>
        </member>
        <member name="F:BoldReports.Linq.FilterBehavior.StronglyTyped">
            <summary>
            Parses only StronglyTyped values.
            </summary>
        </member>
        <member name="F:BoldReports.Linq.FilterBehavior.StringTyped">
            <summary>
            Parses all values by converting them as string.
            </summary>
        </member>
        <member name="T:BoldReports.Linq.NullableHelperInternal">
            <summary>
            A framework independent utility class for the new Nullable type in .NET Framework 2.0
            </summary>
        </member>
        <member name="M:BoldReports.Linq.NullableHelperInternal.IsComplexType(System.Reflection.PropertyInfo)">
            <summary>
            Indicates whether the specified PropertyDescriptor has nested properties.
            </summary>
            <param name="pd">The PropertyDescriptor to be checked.</param>
            <returns>True if nested properties are found; False otherwise.</returns>
        </member>
        <member name="M:BoldReports.Linq.NullableHelperInternal.IsComplexType(System.Type)">
            <summary>
            Indicates whether the specified Type has nested properties.
            </summary>
            <param name="t">The Type to be checked.</param>
            <returns>True if nested properties are found; False otherwise.</returns>
        </member>
        <member name="M:BoldReports.Linq.NullableHelperInternal.ChangeType(System.Object,System.Type)">
            <summary>
            Use this method instead of Convert.ChangeType. Makes Convert.ChangeType work with Nullable types.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.NullableHelperInternal.ChangeType(System.Object,System.Type,System.IFormatProvider)">
            <summary>
            Use this method instead of Convert.ChangeType. Makes Convert.ChangeType work with Nullable types.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.NullableHelperInternal.FixDbNUllasNull(System.Object,System.Type)">
            <summary>
            Returns null if value is DBNull and specified type is a Nullable type. Otherwise the value is returned unchanged.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.NullableHelperInternal.GetUnderlyingType(System.Type)">
            <summary>
            Returns the underlying type of a Nullable type. For .NET 1.0 and 1.1 this method will always return null.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:BoldReports.Linq.NullableHelperInternal.TypeConverterHelper">
            <exclude/>
        </member>
        <member name="T:BoldReports.Linq.ValueConvert">
            <summary>
            <see cref="T:BoldReports.Linq.ValueConvert"/> provides conversion routines for values
            to convert them to another type and routines for formatting values.
            </summary>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
            <overload>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </overload>
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider,System.Boolean)">
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <param name="returnDbNUllIfNotValid">Indicates whether exceptions should be avoided or catched and return value should be DBNull if
            it cannot be converted to the target type.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.TryParse(System.String,System.Type)">
            <summary>
            Tries the parse.
            </summary>
            <param name="s">The string value.</param>
            <param name="type">The underline type.</param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider,System.String,System.Boolean)">
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <param name="format">Format string.</param>
            <param name="returnDbNUllIfNotValid">Indicates whether exceptions should be avoided or catched and return value should be DBNull if
            it cannot be converted to the target type.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider)">
            <summary>
            Overloaded. Parses the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String)">
            <summary>
            Parses the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="format">A format string used in a <see cref="M:System.Object.ToString"/> call. Right now
            format is only interpreted to enable roundtripping for formatted dates.
            </param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String,System.Boolean)">
            <summary>
            Parse the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="format">A format string used in a <see cref="M:System.Object.ToString"/> call. Right now
            format is only interpreted to enable roundtripping for formatted dates.
            </param>
            <param name="returnDbNUllIfNotValid">Indicates whether DbNull should be returned if value cannot be parsed. Otherwise an exception is thrown.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String[],System.Boolean)">
            <summary>
            Parse the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="formats">A string array holding permissible formats used in a <see cref="M:System.Object.ToString"/> call. Right now
            formats is only interpreted to enable roundtripping for formatted dates.
            </param>
            <param name="returnDbNUllIfNotValid">Indicates whether DbNull should be returned if value cannot be parsed. Otherwise an exception is thrown.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.FormatValue(System.Object,System.Type,System.String,System.Globalization.CultureInfo,System.Globalization.NumberFormatInfo)">
            <summary>
            Generates display text using the specified format, culture info and number format.
            </summary>
            <param name="value">The value to format.</param>
            <param name="valueType">The value type on which formatting is based. The original value will first be converted to this type.</param>
            <param name="format">The format like in ToString(string format).</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo"/> for formatting the value.</param>
            <param name="nfi">The <see cref="T:System.Globalization.NumberFormatInfo"/> for formatting the value.</param>
            <returns>The string with the formatted text for the value.</returns>
        </member>
        <member name="P:BoldReports.Linq.ValueConvert.AllowFormatValueTrimEnd">
            <summary>
            Indicates whether <see cref="M:BoldReports.Linq.ValueConvert.FormatValue(System.Object,System.Type,System.String,System.Globalization.CultureInfo,System.Globalization.NumberFormatInfo)"/> should trim whitespace characters from
            the end of the formatted text.
            </summary>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.GetDefaultValue(System.Type)">
            <summary>
            Returns a representative value for any given type. 
            </summary>
            <param name="type">The <see cref="T:System.Type"/>.</param>
            <returns>A value with the specified type.</returns>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.ParseValueWithTypeInformation(System.String,System.Object@)">
            <summary>
            Overloaded. Parses the given string including type information. String can be in format %lt;type&gt; 'value'
            </summary>
            <param name="valueAsString"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.ParseValueWithTypeInformation(System.String,System.Object@,System.Boolean)">
            <summary>
            Parses the given string including type information. String can be in format %lt;type&gt; 'value'
            </summary>
            <param name="valueAsString"></param>
            <param name="retVal"></param>
            <param name="allowConvertFromBase64">Indicates whether TypeConverter should be checked whether the type to be
            parsed supports conversion to/from byte array (e.g. an Image)</param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.TryConvertFromBase64String(System.Type,System.String,System.Object@)">
            <summary>
            Indicates whether the TypeConverter associated with the type supports conversion to/from a byte array (e.g. an Image). 
            If that is the case the string is converted to a byte array from a base64 string.
            </summary>
            <param name="type"></param>
            <param name="valueAsString"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.FormatValueWithTypeInformation(System.Object)">
            <summary>
            Overloaded. Formats the given value as string including type information. String will be in format %lt;type&gt; 'value'
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.FormatValueWithTypeInformation(System.Object,System.Boolean)">
            <summary>
            Formats the given value as string including type information. String will be in format %lt;type&gt; 'value'
            </summary>
            <param name="value"></param>
            <param name="allowConvertToBase64">Indicates whether TypeConverter should be checked whether the type to be
            parsed supports conversion to/from byte array (e.g. an Image)</param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.GetTypeName(System.Type)">
            <summary>
            Returns the type name. If type is not in mscorlib, the assembly name is appended.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.GetType(System.String)">
            <summary>
            Returns the type from the specified name. If an assembly name is appended the list of currently loaded
            assemblies in the current AppDomain are checked.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.ValueConvert.IsEmpty(System.String)">
            <summary>
            Indicates whether string is null or empty.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:BoldReports.Linq.QueryableExtensions">
            <summary>
            Provides extension methods for Queryable source. 
            <para></para>
            <para></para>
            <para>var fonts = FontFamily.Families.AsQueryable(); </para>
            <para></para>
            <para></para>
            <para>We would normally write Expressions as, </para>
            <para></para>
            <code lang="C#">var names = new string[] {&quot;Tony&quot;, &quot;Al&quot;,
            &quot;Sean&quot;, &quot;Elia&quot;}.AsQueryable();
            names.OrderBy(n=&gt;n);</code>
            <para></para>
            <para></para>
            <para>This would sort the names based on alphabetical order. Like so, the
            Queryable extensions are a set of extension methods that define functions which
            will generate expressions based on the supplied values to the functions.</para>
            </summary>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.AndPredicate(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates an AND binary expression for the given Binary expressions.
            <para></para>
            </summary>
            <param name="expr1"></param>
            <param name="expr2"></param>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.OrderBy(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a OrderBy query for the Queryable source.
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var sortedOrders =
            queryable.OrderBy(&quot;ShipCountry&quot;);</code>
            <para></para>
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.OrderBy``1(System.Linq.IQueryable,System.Collections.Generic.IComparer{``0},System.Type)">
            <summary>
            Generates an OrderBy query for the IComparer defined. 
            <para></para>
            <para> </para>
            <code lang="C#">   public class OrdersComparer :
            IComparer&lt;Order&gt;
                {
                    public int Compare(Order x, Order y)
                    {
                        return string.Compare(x.ShipCountry, y.ShipCountry);
                    }
                }</code>
            <para></para>
            <para><code lang="C#">var sortedOrders =
            db.Orders.Skip(0).Take(5).ToList().OrderBy(o =&gt; o, new
            OrdersComparer());</code></para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="comparer"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.OrderByDescending``1(System.Linq.IQueryable,System.Collections.Generic.IComparer{``0},System.Type)">
            <summary>
            Generates an OrderByDescending query for the IComparer defined. 
            <para></para>
            <para> </para>
            <code lang="C#">   public class OrdersComparer :
            IComparer&lt;Order&gt;
                {
                    public int Compare(Order x, Order y)
                    {
                        return string.Compare(x.ShipCountry, y.ShipCountry);
                    }
                }</code>
            <para></para>
            <para><code lang="C#">var sortedOrders =
            db.Orders.Skip(0).Take(5).ToList().OrderByDescending(o =&gt; o, new
            OrdersComparer());</code></para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="comparer"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.OrderByDescending(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a OrderByDescending query for the Queryable source.
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var sortedOrders =
            queryable.OrderByDescending(&quot;ShipCountry&quot;);</code>
            <para></para>
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.GetValueExpression(System.Linq.Expressions.ParameterExpression,System.String,System.Type)">
            <summary>
            Generate expression from simple and complex property
            </summary>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
            <param name="paramExpression"></param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.OrPredicate(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates an OR binary expression for the given Binary expressions.
            <para></para>
            </summary>
            <param name="expr1"></param>
            <param name="expr2"></param>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.Parameter(System.Linq.IQueryable)">
            <summary>
            Creates a ParameterExpression that is required when building a series of
            predicates for the WHERE filter.
            <para></para>
            <code lang="C#">        DataClasses1DataContext db = new
            DataClasses1DataContext();
                    var orders = db.Orders.Skip(0).Take(100).ToList();
                    var queryable = orders.AsQueryable();
                    var parameter =
            queryable.Parameter();</code>
            <para></para>
            <para></para>Use this same parameter passed to generate different predicates and
            finally to generate the Lambda.
            </summary>
            <remarks>
            If we specify a parameter for every predicate, then the Lambda expression scope
            will be out of the WHERE query that gets generated.
            </remarks>
            <param name="source"></param>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.Predicate(System.Linq.IQueryable,System.Linq.Expressions.ParameterExpression,System.String,System.Object,BoldReports.Linq.FilterType,BoldReports.Linq.FilterBehavior,System.Boolean,System.Type)">
            <summary>
            Predicate is a Binary expression that needs to be built for a single or a series
            of values that needs to be passed on to the WHERE expression. 
            <para></para>
            <para></para>
            <code lang="C#">var binaryExp = queryable.Predicate(parameter,
            &quot;EmployeeID&quot;, &quot;4&quot;, true);</code>
            </summary>
            <remarks>
            First create a ParameterExpression using the Parameter extension function, then
            use the same ParameterExpression to generate the predicates.
            </remarks>
            <param name="source"></param>
            <param name="paramExpression"></param>
            <param name="propertyName"></param>
            <param name="constValue"></param>
            <param name="filterType"></param>
            <param name="filteBehaviour"></param>
            <param name="isCaseSensitive"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.Select(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a Select query for a single property value.
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.Select(System.Linq.IQueryable,System.String[])">
            <summary>
            Generates a Select query based on the properties passed. 
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var selector = queryable.Select(new string[]{
            &quot;OrderID&quot;, &quot;ShipCountry&quot; });</code>
            </summary>
            <param name="source"></param>
            <param name="properties"></param>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.Select(System.Linq.IQueryable,System.Collections.Generic.IEnumerable{System.String},System.Type)">
            <summary>
            Generates a Select query based on the properties passed. 
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var selector = queryable.Select(new List&lt;string&gt;() {
            &quot;OrderID&quot;, &quot;ShipCountry&quot; });</code>
            <para></para>
            <para>It returns a dynamic class generated thru ReflectionEmit, Use reflection
            to identify the properties and values.</para>
            </summary>
            <param name="source"></param>
            <param name="properties"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.Skip(System.Linq.IQueryable,System.Int32,System.Type)">
            <summary>
            Generates a SKIP expression in the IQueryable source.
            </summary>
            <param name="source">The source.</param>
            <param name="constValue">The const value.</param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.GetDelegateInvokeExpressionAggregateFunc``1(System.Linq.Expressions.ParameterExpression,System.String,System.Delegate)">
            <summary>
            Use this method with a cached delegate, this improves performance when using complex Expressions.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="paramExp"></param>
            <param name="propertyName"></param>
            <param name="expressionFunc"></param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.Take(System.Linq.IQueryable,System.Int32,System.Type)">
            <summary>
            Generates a TAKE expression in the IQueryable source.
            </summary>
            <param name="source">The source.</param>
            <param name="constValue">The const value.</param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.ThenBy(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a ThenBy query for the Queryable source. 
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var sortedOrders = queryable.OrderBy(&quot;ShipCountry&quot;);
                        sortedOrders = sortedOrders.ThenBy(&quot;ShipCity&quot;);</code>
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.ThenBy``1(System.Linq.IQueryable,System.Collections.Generic.IComparer{``0},System.Type)">
            <summary>
            Generates an ThenBy query for the IComparer defined. 
            <para></para>
            <para> </para>
            <code lang="C#">   public class OrdersComparer :
            IComparer&lt;Order&gt;
                {
                    public int Compare(Order x, Order y)
                    {
                        return string.Compare(x.ShipCountry, y.ShipCountry);
                    }
                }</code>
            <para></para>
            <para><code lang="C#">var sortedOrders =
            db.Orders.Skip(0).Take(5).ToList().ThenBy(o =&gt; o, new
            OrdersComparer());</code></para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="comparer"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.ThenByDescending``1(System.Linq.IQueryable,System.Collections.Generic.IComparer{``0},System.Type)">
            <summary>
            Generates an ThenByDescending query for the IComparer defined. 
            <para></para>
            <para> </para>
            <code lang="C#">   public class OrdersComparer :
            IComparer&lt;Order&gt;
                {
                    public int Compare(Order x, Order y)
                    {
                        return string.Compare(x.ShipCountry, y.ShipCountry);
                    }
                }</code>
            <para></para>
            <para><code lang="C#">var sortedOrders =
            db.Orders.Skip(0).Take(5).ToList().ThenByDescending(o =&gt; o, new
            OrdersComparer());</code></para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="comparer"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.ThenByDescending(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a ThenByDescending query for the Queryable source. 
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var sortedOrders = queryable.OrderBy(&quot;ShipCountry&quot;);
                        sortedOrders = sortedOrders.ThenByDescending(&quot;ShipCity&quot;);</code>
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.Where(System.Linq.IQueryable,System.String,System.Object,BoldReports.Linq.FilterType,System.Boolean,System.Type)">
            <summary>
            Generates the where expression.
            <para></para>
            <code lang="C#">            var nw = new Northwind(@&quot;Data Source =
            Northwind.sdf&quot;);
                        IQueryable queryable = nw.Orders.AsQueryable();
                        var filters = queryable.Where(&quot;ShipCountry&quot;,
            &quot;z&quot;, FilterType.Contains);
                        foreach (Orders item in filters)
                        {
                            Console.WriteLine(&quot;{0}/{1}&quot;, item.OrderID,
            item.ShipCountry);
                        }</code>
            </summary>
            <param name="source"></param>
            <param name="propertyName">Name of the property.</param>
            <param name="value"></param>
            <param name="filterType"></param>
            <param name="isCaseSensitive"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:BoldReports.Linq.QueryableExtensions.Where(System.Linq.IQueryable,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
            <summary>
            Use this function to generate WHERE expression based on Predicates. The
            AndPredicate and OrPredicate should be used in combination to build the
            predicate expression which is finally passed on to this function for creating a
            Lambda. 
            <para></para>
            <para></para>
            <para></para>DataClasses1DataContext db = new DataClasses1DataContext();
            <para></para>            var orders = db.Orders.Skip(0).Take(100).ToList();
            <para></para>            var queryable = orders.AsQueryable();
            <para></para>            var parameter =
            queryable.Parameter(&quot;ShipCountry&quot;);
            <para></para>            var binaryExp = queryable.Predicate(parameter,
            <para></para>&quot;ShipCountry&quot;, &quot;USA&quot;, true);
            <para></para>            var filteredOrders = queryable.Where(parameter,
            binaryExp);
            <para></para>            foreach (var order in filteredOrders)
            <para></para>            {
            <para></para>                Console.WriteLine(order);
            <para></para>            }
            <para></para>
            <para></para>
            <para></para>Build Predicates for Contains / StartsWith / EndsWith,
            <para></para>
            <para></para>            IQueryable queryable = nw.Orders.AsQueryable();
            <para></para>            var parameter = queryable.Parameter();
            <para></para>            var exp1 = queryable.Predicate(parameter,
            &quot;ShipCountry&quot;, &quot;h&quot;, FilterType.Contains);
            <para></para>            var exp2 = queryable.Predicate(parameter,
            &quot;ShipCountry&quot;, &quot;a&quot;, FilterType.StartsWith);
            <para></para>            var andExp = exp2.OrPredicate(exp1);
            <para></para>            var filters = queryable.Where(parameter, andExp);
            <para></para>            foreach (Orders item in filters)
            <para></para>            {
            <para></para>                Console.WriteLine(&quot;{0}/{1}&quot;,
            item.OrderID, item.ShipCountry);
            <para></para>            }
            <para></para>
            </summary>
            <param name="source"></param>
            <param name="paramExpression"></param>
            <param name="predicateExpression"></param>
        </member>
        <member name="T:BoldReports.ConfigurePaneSettingsBuilder">
            <summary>
            Contains properties and methods to initialize and set the report designer configuration pane settings.
            </summary>
        </member>
        <member name="F:BoldReports.ConfigurePaneSettingsBuilder.configurePaneSettings">
            <summary>
            Contains the instance of <see cref="T:BoldReports.Models.ReportDesigner.ConfigurePaneSettings"/> class
            </summary>
        </member>
        <member name="M:BoldReports.ConfigurePaneSettingsBuilder.#ctor(BoldReports.Models.ReportDesigner.ConfigurePaneSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.ConfigurePaneSettingsBuilder"/> class.
            </summary>
            <param name="configurePaneSettings">Gets the configure pane settings,<see cref="T:BoldReports.Models.ReportDesigner.ConfigurePaneSettings" /> .</param>
        </member>
        <member name="M:BoldReports.ConfigurePaneSettingsBuilder.ShowConfigurePane(System.Boolean)">
            <summary>
            Sets the configuration pane visibility status to showPane property in configure pane settings.
            </summary>
            <param name="value">Specify <see langword="true"/> or <see langword="false"/>.</param>
            <returns><see cref="T:BoldReports.ConfigurePaneSettingsBuilder" />.</returns>
        </member>
        <member name="M:BoldReports.ConfigurePaneSettingsBuilder.Items(BoldReports.ReportDesignerEnums.ConfigurePaneItems)">
            <summary>
            Sets items property in configure pane settings; the items list to be enabled in configuration pane.
            </summary>
            <param name="value">Specify the items list to be enabled in configuration pane.</param>
            <returns><see cref="T:BoldReports.ConfigurePaneSettingsBuilder" />.</returns>
        </member>
        <member name="T:BoldReports.PermissionSettingsBuilder">
            <summary>
            Contains properties and methods to initialize and set the report designer permission settings.
            </summary>
        </member>
        <member name="F:BoldReports.PermissionSettingsBuilder.permissionSettings">
            <summary>
            Contains the instance of <see cref="T:BoldReports.Models.ReportDesigner.PermissionSettings"/> class.
            </summary>
        </member>
        <member name="M:BoldReports.PermissionSettingsBuilder.#ctor(BoldReports.Models.ReportDesigner.PermissionSettings)">
            <summary>
            Initialize a new instance of the <see cref="T:BoldReports.PermissionSettingsBuilder"/> class.
            </summary>
            <param name="PermissionSettings">Gets the permission settings to configure restriction of datasource and dataset,<see cref="T:BoldReports.Models.ReportDesigner.PermissionSettings" /> </param>
        </member>
        <member name="M:BoldReports.PermissionSettingsBuilder.DataSet(BoldReports.ReportDesignerEnums.Permission)">
            <summary>
            Sets the permission for data set options.
            </summary>
            <param name="value">Gets the permission settings for dataset restriction.</param>
            <returns><see cref="T:BoldReports.PermissionSettingsBuilder" />.</returns>
        </member>
        <member name="M:BoldReports.PermissionSettingsBuilder.DataSource(BoldReports.ReportDesignerEnums.Permission)">
            <summary>
            Sets the permission for data source options.
            </summary>
            <param name="value">Gets the permission settings for data source restriction.</param>
            <returns><see cref="T:BoldReports.PermissionSettingsBuilder" />.</returns>
        </member>
        <member name="T:BoldReports.ReportDataExtensionBuilder">
            <summary>
            Contains properties and methods to initialize and set the report designer custom data extensions settings.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDataExtensionBuilder.m_ReportDataExtensions">
            <summary>
            Contains the instance of <see cref="T:BoldReports.Models.ReportDesigner.ReportDataExtensionsModule"/> class.
            </summary>
        </member>
        <member name="M:BoldReports.ReportDataExtensionBuilder.#ctor(BoldReports.Models.ReportDesigner.ReportDataExtensionsModule)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.ReportDataExtensionBuilder"/> class.
            </summary>
            <param name="dataExtensions">Gets the custom data extension information, <see cref="T:BoldReports.Models.ReportDesigner.ReportDataExtensionsModule"/>.</param>
        </member>
        <member name="M:BoldReports.ReportDataExtensionBuilder.#ctor(BoldReports.Models.ReportDesigner.ReportDataExtensionsModule,BoldReports.ReportDesigner)">
            <summary>
            Sets the instance of the <see cref="T:BoldReports.ReportDataExtensionBuilder"/> class and report designer control model.
            </summary>
            <param name="dataExtensions">Gets the list of data extensions, <see cref="T:BoldReports.Models.ReportDesigner.ReportDataExtensionsModule"/>.</param>
            <param name="reportDesigner">Gets the report designer instance, <see cref="T:BoldReports.ReportDesigner"/></param>
        </member>
        <member name="M:BoldReports.ReportDataExtensionBuilder.Add">
            <summary>
            Adds the data extension into existing data extensions list.
            </summary>
        </member>
        <member name="M:BoldReports.ReportDataExtensionBuilder.Name(System.String)">
            <summary>
            Sets the name of the data extension.
            </summary>
            <param name="value">Specify the name of datasource type as string.</param>
            <returns><see cref="T:BoldReports.ReportDataExtensionBuilder"/>.</returns>
        </member>
        <member name="M:BoldReports.ReportDataExtensionBuilder.ClassName(System.String)">
            <summary>
            Sets the prototype name of the datasource.
            </summary>
            <param name="value">Gets the prototype name as string.</param>
            <returns><see cref="T:BoldReports.ReportDataExtensionBuilder"/>.</returns>
        </member>
        <member name="M:BoldReports.ReportDataExtensionBuilder.ImageClass(System.String)">
            <summary>
            Sets the css class name to render image in the tile view.
            </summary>
            <param name="value">Gets the css class name as string</param>
            <returns><see cref="T:BoldReports.ReportDataExtensionBuilder"/>.</returns>
        </member>
        <member name="M:BoldReports.ReportDataExtensionBuilder.DisplayName(System.String)">
            <summary>
            Sets the name to display in the tile view.
            </summary>
            <param name="value">Gets the display name for datasource type as string.</param>
            <returns><see cref="T:BoldReports.ReportDataExtensionBuilder"/>.</returns>
        </member>
        <member name="T:BoldReports.ReportDesignerPropertiesBuilder">
            <summary>
            Class for ReportDesignerPropertiesBuilder.
            </summary>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.#ctor(BoldReports.ReportDesigner)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.ReportDesignerPropertiesBuilder"/> class.
            </summary>
            <param name="reportDesigner">The report designer.</param>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /> class. 
            </summary>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ServiceUrl(System.String)">
            <summary>
            Sets the URL of the WebAPI service; it will be used for processing the report.
            </summary>
            <param name="serviceUrl">Specify the report service URL to access the report server API.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" />.</returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.Locale(System.String)">
            <summary>
            Sets the locale for report designer.
            </summary>
            <param name="locale">Specify the language code as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.FontNames(System.String[])">
            <summary>
            Sets the custom font names array in report designer model.
            </summary>
            <param name="fontArray">Specify the list of font names as string array.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.WaitingPopupTemplate(System.String)">
            <summary>
            Sets the waiting pop up template for report designer.
            </summary>
            <param name="template">Specify the current waiting popup template as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.EnableImpersonate(System.Boolean)">
            <summary>
            Sets the Impersonate option for report designer datasources.
            </summary>
            <param name="enableImpersonate">Specify the Impersonate option as boolean.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ReportPath(System.String)">
            <summary>
            Sets the report path into report designer model.
            </summary>
            <param name="reportpath">Specify the path of report as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ReportServerUrl(System.String)">
            <summary>
            Sets the report server Url for report designer.
            </summary>
            <param name="reportServerUrl">Specify the Url of report server as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ServiceAuthorizationToken(System.String)">
            <summary>
            Sets the authorization token to access the Report Server API services.
            </summary>
            <param name="serviceAuthorizationToken">Specify the authorization token as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ToolbarSettings(System.Action{BoldReports.DesignerToolbarSettingsBuilder})">
            <summary>
            Sets the toolbar settings.
            </summary>
            <param name="toolbarSettings">Gets the toolbar property settings.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ConfigurePaneSettings(System.Action{BoldReports.ConfigurePaneSettingsBuilder})">
            <summary>
            Sets the configuration pane settings.
            </summary>
            <param name="configurePaneSettings">Gets the configuration pane property settings.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ReportType(BoldReports.ReportDesignerEnums.ReportType)">
            <summary>
            Sets the report type into report designer model.
            </summary>
            <param name="reportType">Specify the value as <see cref="T:BoldReports.ReportDesignerEnums.ReportType" /> enum.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ReportVersion(BoldReports.ReportDesignerEnums.ReportVersion)">
            <summary>
            Sets the schema version of the report into report designer model.
            </summary>
            <param name="reportVersion">Specify the value as <see cref="T:BoldReports.ReportDesignerEnums.ReportVersion" /> enum.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.PermissionSettings(System.Action{BoldReports.PermissionSettingsBuilder})">
            <summary>
            Sets the permission settings into report designer model.
            </summary>
            <param name="permission">Gets the permission settings for report designer data options.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.Destroy(System.String)">
            <summary>
            Sets the destroy event into report designer model.
            </summary>
            <param name="destroy">Specify the destroy event name as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.AjaxBeforeLoad(System.String)">
            <summary>
            Sets the ajax before load event into report designer model.
            </summary>
            <param name="ajaxBeforeLoad">Gets the ajax before load event name as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.AjaxError(System.String)">
            <summary>
            Sets the ajax error event into report designer model.
            </summary>
            <param name="ajaxError">Gets the ajax error event.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.AjaxSuccess(System.String)">
            <summary>
            Sets the ajax success event into report designer model.
            </summary>
            <param name="ajaxSuccess">Gets the ajax success event name as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.Create(System.String)">
            <summary>
            Sets the create event into report designer model.
            </summary>
            <param name="create">Gets the create event name as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.OpenReportClick(System.String)">
            <summary>
            Sets the open report click event into report designer model.
            </summary>
            <param name="openReportClick">Gets the open report click event name as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.NewDataClick(System.String)">
            <summary>
             Sets the new data click event into report designer model.
            </summary>
            <param name="newDataClick">Gets the new data click event name as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.PreviewReport(System.String)">
            <summary>
            Sets the preview report click event into report designer model.
            </summary>
            <param name="previewReport">Gets the preview report click event name as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ReportModified(System.String)">
            <summary>
            Sets the report modified event into report designer model.
            </summary>
            <param name="reportModified">Gets the reportModified event name as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ReportOpened(System.String)">
            <summary>
            Sets the report opened event into report designer model.
            </summary>
            <param name="reportOpened">Gets the reportOpened event name as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ReportSaved(System.String)">
            <summary>
            Sets the report saved event into report designer model.
            </summary>
            <param name="reportSaved">Gets the reportSaved event name as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ToolbarRendering(System.String)">
            <summary>
            Sets the toolbar rendering event into report designer model.
            </summary>
            <param name="toolbarRendering">Gets the toolbar rendering event name as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.SaveReportClick(System.String)">
            <summary>
            Sets the save report click event into report designer model.
            </summary>
            <param name="saveReportClick">Gets the saveReportClick event name as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ToolbarClick(System.String)">
            <summary>
            Sets the toolbar click event into report designer model.
            </summary>
            <param name="toolbarClick">Gets the toolbarClick event name as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ExtensionLocaleChanged(System.String)">
            <summary>
            Sets the extension locale changed event into report designer model.
            </summary>
            <param name="extensionLocaleChanged">Gets the extensionLocaleChanged event name as string.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ReportItemExtensions(System.Action{BoldReports.ReportItemExtensionBuilder})">
            <summary>
            Sets the list of report item extensions to render custom report items.
            </summary>
            <param name="reportItemExtensions">Gets the report item extension class instance, <see cref="T:BoldReports.ReportItemExtensionBuilder" />.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ReportItemExtensions(System.Collections.Generic.List{BoldReports.Models.ReportDesigner.ReportItemExtensionsModule})">
            <summary>
            Sets the list of custom report item extensions into report designer model.
            </summary>
            <param name="reportItemExtensions">Gets the list of custom report items.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ReportDataExtensions(System.Action{BoldReports.ReportDataExtensionBuilder})">
            <summary>
            Sets the list of data extensions to render custom data extensions.
            </summary>
            <param name="reportDataExtensions">Gets the list of custom data extensions.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ReportDataExtensions(System.Collections.Generic.List{BoldReports.Models.ReportDesigner.ReportDataExtensionsModule})">
            <summary>
            Sets the list of data extensions into report designer model.
            </summary>
            <param name="reportDataExtensions">Gets the list of custom data extensions.</param>
            <returns><see cref="T:BoldReports.ReportDesignerPropertiesBuilder" /></returns>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.Render">
            <summary>
            Renders the report designer control.
            </summary>
        </member>
        <member name="M:BoldReports.ReportDesignerPropertiesBuilder.ToHtmlString">
            <summary>
            Converts the report designer control into an HTML-encoded string.
            </summary>
            <returns>
            An HTML-encoded string.
            </returns>
        </member>
        <member name="T:BoldReports.ReportItemExtensionBuilder">
            <summary>
            Contains properties and methods to configure the report item extensions.
            </summary>
        </member>
        <member name="F:BoldReports.ReportItemExtensionBuilder.m_ReportItemExtensions">
            <summary>
            Contains the instance of <see cref="T:BoldReports.Models.ReportDesigner.ReportItemExtensionsModule"/> class
            </summary>
        </member>
        <member name="M:BoldReports.ReportItemExtensionBuilder.#ctor(BoldReports.Models.ReportDesigner.ReportItemExtensionsModule)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.ReportItemExtensionBuilder"/> class.
            </summary>
            <param name="reportItemExtensions">Gets the report item extensions settings, <see cref="T:BoldReports.Models.ReportDesigner.ReportItemExtensionsModule" /> .</param>
        </member>
        <member name="M:BoldReports.ReportItemExtensionBuilder.#ctor(BoldReports.Models.ReportDesigner.ReportItemExtensionsModule,BoldReports.ReportDesigner)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.ReportItemExtensionBuilder"/> class.
            </summary>
            <param name="reportItemExtensions">Gets the list of report item extensions.</param>
            <param name="reportDesigner">Gets the report designer instance.</param>
        </member>
        <member name="M:BoldReports.ReportItemExtensionBuilder.Add">
            <summary>
            Adds the report item extension into existing report item extensions list.
            </summary>
        </member>
        <member name="M:BoldReports.ReportItemExtensionBuilder.Name(System.String)">
            <summary>
            Sets the name of the custom report item.
            </summary>
            <param name="value">Gets the name of the custom report item as string.</param>
            <returns><see cref="T:BoldReports.ReportItemExtensionBuilder" />.</returns>
        </member>
        <member name="M:BoldReports.ReportItemExtensionBuilder.ClassName(System.String)">
            <summary>
            Sets the prototype name of the report item.
            </summary>
            <param name="value">Gets the prototype name as string.</param>
            <returns><see cref="T:BoldReports.ReportItemExtensionBuilder" />.</returns>
        </member>
        <member name="M:BoldReports.ReportItemExtensionBuilder.ImageClass(System.String)">
            <summary>
            Sets the image class name to load image in widgets pane tile.
            </summary>
            <param name="value">Gets css class name as string.</param>
            <returns><see cref="T:BoldReports.ReportItemExtensionBuilder" />.</returns>
        </member>
        <member name="M:BoldReports.ReportItemExtensionBuilder.DisplayName(System.String)">
            <summary>
            Sets the name to display in the widgets pane tile.
            </summary>
            <param name="value">Gets the name as string.</param>
            <returns><see cref="T:BoldReports.ReportItemExtensionBuilder" />.</returns>
        </member>
        <member name="M:BoldReports.ReportItemExtensionBuilder.Category(System.String)">
            <summary>
            Sets the category name to create/add category in widgets pane for report item.
            </summary>
            <param name="value">Gets the category name as string.</param>
            <returns><see cref="T:BoldReports.ReportItemExtensionBuilder" />.</returns>
        </member>
        <member name="T:BoldReports.DesignerToolbarSettingsBuilder">
            <summary>
            Contains properties and methods to configure report designer toolbar settings.
            </summary>
        </member>
        <member name="F:BoldReports.DesignerToolbarSettingsBuilder.toolbarSettings">
            <summary>
            Contains the instance of <see cref="T:BoldReports.Models.ReportDesigner.ToolbarSettings"/> class
            </summary>
        </member>
        <member name="M:BoldReports.DesignerToolbarSettingsBuilder.#ctor(BoldReports.Models.ReportDesigner.ToolbarSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.DesignerToolbarSettingsBuilder"/> class.
            </summary>
            <param name="toolbarSettings">Gets the toolbar property settings.</param>
        </member>
        <member name="M:BoldReports.DesignerToolbarSettingsBuilder.ShowToolbar(System.Boolean)">
            <summary>
            Sets the toolbar visibility value.
            </summary>
            <param name="value">if set to <c>true</c> [value].</param>
            <returns><see cref="T:BoldReports.DesignerToolbarSettingsBuilder"/>.</returns>
        </member>
        <member name="M:BoldReports.DesignerToolbarSettingsBuilder.Items(BoldReports.ReportDesignerEnums.ToolbarItems)">
            <summary>
            Sets the visiblity value for items in the toolbar.
            </summary>
            <param name="value">Gets the items list to be enabled in toolbar.</param>
            <returns><see cref="T:BoldReports.DesignerToolbarSettingsBuilder"/>.</returns>
        </member>
        <member name="M:BoldReports.DesignerToolbarSettingsBuilder.TemplateId(System.String)">
            <summary>
            Sets the toolbar template ID property.
            </summary>
            <param name="value">Gets the template id for toolbar as string.</param>
            <returns><see cref="T:BoldReports.DesignerToolbarSettingsBuilder"/>.</returns>
        </member>
        <member name="T:BoldReports.ReportDesigner">
            <summary>
            Contains properties and methods to render Report Designer control.
            </summary>
        </member>
        <member name="P:BoldReports.ReportDesigner.ReportDesignerModel">
            <summary>
            Gets or sets the report designer model.
            </summary>
            <value>The <see cref="T:BoldReports.Models.ReportDesignerProperties" /> model.</value>
        </member>
        <member name="P:BoldReports.ReportDesigner.TagName">
            <summary>
            Gets the element name of a tag that contains a runat=server attribute and value pair.
            </summary>
        </member>
        <member name="P:BoldReports.ReportDesigner.PluginName">
            <summary>
            Gets the Plugin name that contains a runat=server attribute and value pair.
            </summary>
        </member>
        <member name="P:BoldReports.ReportDesigner.Model">
            <summary>
            Gets the <see cref="P:BoldReports.ReportDesigner.ReportDesignerModel" /> model.
            </summary>
        </member>
        <member name="M:BoldReports.ReportDesigner.GetDependentControl">
            <summary>
            Returns the list of report designer dependent control list.
            </summary>
        </member>
        <member name="M:BoldReports.ReportDesigner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.ReportDesigner"/> class.
            </summary>
        </member>
        <member name="M:BoldReports.ReportDesigner.#ctor(System.String)">
            <summary>
            Sets the control id for report designer component.
            </summary>
            <param name="id">Gets the id for report designer component.</param>
        </member>
        <member name="M:BoldReports.ReportDesigner.#ctor(System.String,BoldReports.Models.ReportDesignerProperties)">
            <summary>
            Sets the id and model for report designer component.
            </summary>
            <param name="id">Gets the id of report designer component.</param>
            <param name="designerModel">Gets the designer model, <see cref="T:BoldReports.Models.ReportDesignerProperties"/>.</param>
        </member>
        <member name="M:BoldReports.ReportDesigner.CreateContainer(System.String)">
            <summary>
            Container encapsulates zero or more components.Through a container you can track your components and communicate with them.
            </summary>
            <param name="controlId">Gets the id of report designer component.</param>
            <returns>This method returns report designer HTML tag element as <see cref="T:Microsoft.AspNetCore.Html.HtmlString"/>.</returns>
        </member>
        <member name="M:BoldReports.ReportDesigner.BuildScriptContent(System.String)">
            <summary>
            Builds the script content for report designer.
            </summary>
            <param name="jsonContent">Gets the report designer properties and events binding information.</param>
            <returns>Returns the script content for report designer component rendering.</returns>
            <remarks></remarks>
        </member>
        <member name="M:BoldReports.ReportDesigner.RenderControl(System.String)">
            <summary>
            Renders the report designer component.
            </summary>
            <param name="controlId">Gets the id of report designer component.</param>
        </member>
        <member name="M:BoldReports.ReportDesigner.RenderElement(System.String)">
            <summary>
            Builds HTML tag element for report designer.
            </summary>
            <param name="controlId">Gets the id of report designer component.</param>
            <returns>Returns the HTML tag element as string.</returns>
        </member>
        <member name="T:BoldReports.ReportDesignerEnums.ToolbarItems">
            <summary>
             Defines enum for report designer <see cref="P:BoldReports.Models.ReportDesigner.ToolbarSettings.Items" />.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.New">
            <summary>
            Represents New option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.Open">
            <summary>
            Represents Open menu option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.Save">
            <summary>
            Represents save option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.Cut">
            <summary>
            Represents cut option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.Copy">
            <summary>
            Represents copy option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.Paste">
            <summary>
            Represents paste option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.Delete">
            <summary>
            Represents delete option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.Undo">
            <summary>
            Represents undo option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.Redo">
            <summary>
            Represents redo option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.Zoom">
            <summary>
            Represents zoom option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.Order">
            <summary>
            Represents Order option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.Alignment">
            <summary>
            Represents Align option for Left, Center, Right, Top, Middle and Bottom.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.Distribute">
            <summary>
            Represents Distribute Vertically and Horizontally option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.Center">
            <summary>
            Represents Align Center Vertically and Horizontally option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.Sizing">
            <summary>
            Represents Align Sizing option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.AlignGrid">
            <summary>
            Represents Align Grid option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.EditDesign">
            <summary>
            Represents EditDesign option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.View">
            <summary>
            Represents View option for Header, Footer, GridLine and SnapToShape.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.Preview">
            <summary>
            Represents preview option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ToolbarItems.All">
            <summary>
             Represents All kind of toolbar options.
            </summary>
        </member>
        <member name="T:BoldReports.ReportDesignerEnums.ConfigurePaneItems">
            <summary>
             Defines enum for report designer <see cref="T:BoldReports.Models.ReportDesigner.ConfigurePaneSettings" /> items.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ConfigurePaneItems.Properties">
            <summary>
            Represents Properties option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ConfigurePaneItems.Data">
            <summary>
            Represents Data option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ConfigurePaneItems.Parameter">
            <summary>
            Represents Parameter option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ConfigurePaneItems.ImageManager">
            <summary>
            Represents ImageManager option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ConfigurePaneItems.All">
            <summary>
             Represents All kind of ConfigurePane options.
            </summary>
        </member>
        <member name="T:BoldReports.ReportDesignerEnums.ReportType">
            <summary>
             Defines enum for supported <see cref="P:BoldReports.Models.ReportDesignerProperties.ReportType" /> in report designer.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ReportType.RDL">
            <summary>
            Represents RDL report type.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ReportType.RDLC">
            <summary>
            Represents RDLC report type.
            </summary>
        </member>
        <member name="T:BoldReports.ReportDesignerEnums.Permission">
            <summary>
             Defines enum for report designer <see cref="T:BoldReports.Models.ReportDesigner.PermissionSettings" />
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.Permission.Create">
            <summary>
            Represents Create option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.Permission.Edit">
            <summary>
            Represents Edit option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.Permission.Delete">
            <summary>
            Represents Delete option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.Permission.Shared">
            <summary>
            Represents Shared option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.Permission.All">
            <summary>
             Represents All Permissions.
            </summary>
        </member>
        <member name="T:BoldReports.ReportDesignerEnums.ReportVersion">
            <summary>
             Defines enum for report designer supported <see cref="P:BoldReports.Models.ReportDesignerProperties.ReportVersion" /> .
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ReportVersion.Default">
            <summary>
            Represents Report version type.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ReportVersion.RDL2010">
            <summary>
            Represents Report version type.
            </summary>
        </member>
        <member name="F:BoldReports.ReportDesignerEnums.ReportVersion.RDL2016">
            <summary>
            Represents Report version type.
            </summary>
        </member>
        <member name="T:BoldReports.ExportSettingsBuilder">
            <summary>
            Class for ExportSettingsBuilder.
            </summary>
        </member>
        <member name="M:BoldReports.ExportSettingsBuilder.#ctor(BoldReports.Models.ReportViewer.ExportSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.ExportSettingsBuilder"/> class.
            </summary>
            <remarks>
            Create the new instance for the ExportSettingsBuilder.
            </remarks>
            <param name="exportSettings">The export settings.</param>
        </member>
        <member name="M:BoldReports.ExportSettingsBuilder.ExportOptions(BoldReports.ReportViewerEnums.ExportOptions)">
            <summary>
            Specifies the export options.
            </summary>
            <param name="value">The value.</param>
            <returns>ExportSettingsBuilder.</returns>        
        </member>
        <member name="M:BoldReports.ExportSettingsBuilder.ExcelVersion(BoldReports.ReportViewerEnums.ExcelFormats)">
            <summary>
            Specifies the excel export format.
            </summary>
            <param name="excelVersion">The excel version.</param>
            <returns>ExportSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.ExportSettingsBuilder.WordFormatType(BoldReports.ReportViewerEnums.WordFormats)">
            <summary>
            Specifies the word export format.
            </summary>
            <param name="wordFormat">The word format.</param>
            <returns>ExportSettingsBuilder.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BoldReports.ExportSettingsBuilder.ImageQuality(System.Int32)" -->
        <member name="M:BoldReports.ExportSettingsBuilder.PPTFormatType(BoldReports.ReportViewerEnums.PPTFormats)">
            <summary>
            Specifies the ppt export format.
            </summary>
            <param name="pptFormat">The ppt format.</param>
            <returns>ExportSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.ExportSettingsBuilder.CustomItems(System.Collections.Generic.List{BoldReports.Models.ReportViewer.CustomExportItem})">
            <summary>
            Add the custom items in export options.
            </summary>
            <param name="value">The value.</param>
            <returns>ExportSettingsBuilder.</returns>
        </member>
        <member name="T:BoldReports.PageSettingsBuilder">
            <summary>
            Class for PageSettingsBuilder.
            </summary>
        </member>
        <member name="M:BoldReports.PageSettingsBuilder.#ctor(BoldReports.Models.ReportViewer.PageSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.PageSettingsBuilder"/> class.
            </summary>
            <param name="PageSettings">The page settings.</param>
        </member>
        <member name="M:BoldReports.PageSettingsBuilder.Orientation(BoldReports.ReportViewerEnums.Orientation)">
            <summary>
            Specifies the print layout orientation.
            </summary>
            <param name="value">The paper orientation value.</param>
            <returns>PageSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.PageSettingsBuilder.PaperSize(BoldReports.ReportViewerEnums.PaperSize)">
            <summary>
            Specifies the paper size of print layout.
            </summary>
            <param name="value">The paper size value.</param>
            <returns>PageSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.PageSettingsBuilder.Height(System.Double)">
            <summary>
            Specifies the paper height of print layout.
            </summary>
            <param name="value">The paper height value.</param>
            <returns>PageSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.PageSettingsBuilder.Width(System.Double)">
            <summary>
            Specifies the paper width of print layout.
            </summary>
            <param name="value">The paper width value.</param>
            <returns>PageSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.PageSettingsBuilder.Margins(System.Action{BoldReports.Models.ReportViewer.PageMarginsBuilder})">
            <summary>
            Specifies the page margins.
            </summary>
            <param name="pageMarginsBuilder">The page margin value.</param>
            <returns>PageSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.PageSettingsBuilder.Margins(BoldReports.Models.ReportViewer.Margins)">
            <summary>
            Specifies the paper margins of print layout.
            </summary>
            <param name="value">The page margin value.</param>
            <returns>PageSettingsBuilder.</returns>
        </member>
        <member name="T:BoldReports.ParameterSettingsBuilder">
            <summary>
            Class for ParameterSettingsBuilder.
            </summary>
        </member>
        <member name="M:BoldReports.ParameterSettingsBuilder.#ctor(BoldReports.Models.ReportViewer.ParameterSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.Models.ReportViewer.ParameterSettings"/> class.
            </summary>
            <param name="parameterSettings">The Parameter settings.</param>
        </member>
        <member name="M:BoldReports.ParameterSettingsBuilder.DelimiterChar(System.String)">
            <summary>
            The special character which acts as a separator for the selected multivalue parameter values.
            </summary>
            <param name="delimiterChar">The delimiter character.</param>
            <returns>ParameterSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.ParameterSettingsBuilder.PopupHeight(System.String)">
            <summary>
            Specifies the height of the combobox parameter popup list. By default, the popup height value is 152px.
            </summary>
            <param name="popupHeight">The height of the popup container.</param>
            <returns>ParameterSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.ParameterSettingsBuilder.PopupWidth(System.String)">
            <summary>
            Specifies the width of the combobox parameter popup list. By default, the popup width sets based on the width of the component.
            </summary>
            <param name="popupWidth">The width of the popup container.</param>
            <returns>ParameterSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.ParameterSettingsBuilder.ItemWidth(System.String)">
            <summary>
            Specifies the width of the parameter item. By default, the item width value is set as 185px.
            </summary>
            <param name="itemWidth">The width of the parameter item.</param>
            <returns>ParameterSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.ParameterSettingsBuilder.LabelWidth(System.String)">
            <summary>
            Specifies the width of the parameter label. By default, the parameter label width value is set as 110px.
            </summary>
            <param name="labelWidth">The width of the parameter label.</param>
            <returns>ParameterSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.ParameterSettingsBuilder.DateTimePickerType(BoldReports.ReportViewerEnums.DateTimePickerType)">
            <summary>
            Enable or Disable Changing Date and Time picker for report viewer.
            </summary>
            <param name="dateTimePickerType">The enable Date Time picker.</param>
            <returns>ParameterSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.ParameterSettingsBuilder.AccessInternalValue(System.Boolean)">
            <summary>
            Provides access to get the hidden or internal report parameter information
            </summary>
            <param name="accessInternalValue">Boolean value indicates whether the user can access the hidden or internal parameter information or not.</param>
            <returns>ParameterSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.ParameterSettingsBuilder.HideParameterBlock(System.Boolean)">
            <summary>
            Show or hide the parameter block on initial report rendering.
            </summary>
            <param name="hideParameterBlock">Indicates whether the parameter block needs to be displayed or not.</param>
            <returns>ParameterSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.ParameterSettingsBuilder.MaxDateTime(System.Nullable{System.DateTime})">
            <summary>
            Specifies the maximum date time in the date parameter that the user can select. By default, the MaxDateTime value is set as null.
            </summary>
            <param name="maxDateTime">The maximum DateTime range of the date parameter.</param>
            <returns>ParameterSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.ParameterSettingsBuilder.MinDateTime(System.Nullable{System.DateTime})">
            <summary>
            Specifies the minimum date time in the date parameter that the user can select. By default, the MinDateTime value is set as null.
            </summary>
            <param name="minDateTime">The minimum DateTime range of the date parameter.</param>
            <returns>ParameterSettingsBuilder.</returns>
        </member>
        <member name="T:BoldReports.ReportDataSourceBuilder">
            <summary>
            Class for ReportDataSourceBuilder.
            </summary>
        </member>
        <member name="M:BoldReports.ReportDataSourceBuilder.#ctor(BoldReports.Models.ReportViewer.ReportDataSource)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.ReportDataSourceBuilder"/> class.
            </summary>
            <param name="dataSource">The data source.</param>
        </member>
        <member name="M:BoldReports.ReportDataSourceBuilder.#ctor(BoldReports.Models.ReportViewer.ReportDataSource,BoldReports.ReportViewer)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.ReportDataSourceBuilder"/> class.
            </summary>
            <param name="dataSource">The data source.</param>
            <param name="reportViewer">The report viewer.</param>
        </member>
        <member name="M:BoldReports.ReportDataSourceBuilder.Name(System.String)">
            <summary>
            Gets or sets the name of the data source.
            </summary>
            <param name="value">The value.</param>
            <returns>ReportDataSourceBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportDataSourceBuilder.Value(System.Object)">
            <summary>
            Gets or sets the values of data source.
            </summary>
            <param name="value">The value.</param>
            <returns>ReportDataSourceBuilder.</returns>
        </member>
        <member name="T:BoldReports.ReportParameterBuilder">
            <summary>
            Class for ReportParameterBuilder.
            </summary>
        </member>
        <member name="M:BoldReports.ReportParameterBuilder.#ctor(BoldReports.Models.ReportViewer.ReportParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.ReportParameterBuilder"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:BoldReports.ReportParameterBuilder.#ctor(BoldReports.Models.ReportViewer.ReportParameter,BoldReports.ReportViewer)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.ReportParameterBuilder"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="reportViewer">The report viewer.</param>
        </member>
        <member name="M:BoldReports.ReportParameterBuilder.Name(System.String)">
            <summary>
            Gets or sets the name of the parameter.
            </summary>
            <param name="value">The value.</param>
            <returns>ReportParameterBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportParameterBuilder.Nullable(System.Boolean)">
            <summary>
            Gets or sets whether the parameter allows nullable value or not.
            </summary>
            <param name="value">if set to <c>true</c> [value].</param>
            <returns>ReportParameterBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportParameterBuilder.Prompt(System.String)">
            <summary>
            Gets or sets the prompt message associated with the specified parameter.
            </summary>
            <param name="value">The value.</param>
            <returns>ReportParameterBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportParameterBuilder.Values(System.Collections.Generic.List{System.String})">
            <summary>
            Gets or sets the parameter values.
            </summary>
            <param name="value">The list of value.</param>
            <returns>ReportParameterBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportParameterBuilder.Labels(System.Collections.Generic.List{System.String})">
            <summary>
            Gets or sets the parameter labels.
            </summary>
            <param name="value">The list of labels value.</param>
            <returns>ReportParameterBuilder.</returns>
        </member>
        <member name="T:BoldReports.ReportViewerPropertiesBuilder">
            <summary>
            Class for ReportViewerPropertiesBuilder.
            </summary>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.#ctor(BoldReports.ReportViewer)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.ReportViewerPropertiesBuilder"/> class.
            </summary>
            <param name="reportViewer">The report viewer.</param>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.DataSources(System.Action{BoldReports.ReportDataSourceBuilder})">
            <summary>
            Gets or sets the list of data sources for the RDLC report.
            </summary>
            <param name="datasources">The datasources.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.DataSources(System.Collections.Generic.List{BoldReports.Models.ReportViewer.ReportDataSource})">
            <summary>
            Gets or sets the list of data sources for the RDLC report.
            </summary>
            <param name="datasources">The list of datasources.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.Parameters(System.Action{BoldReports.ReportParameterBuilder})">
            <summary>
            Gets or sets the list of parameters associated with the report.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.Parameters(System.Collections.Generic.List{BoldReports.Models.ReportViewer.ReportParameter})">
            <summary>
            Gets or sets the list of parameters associated with the report.
            </summary>
            <param name="parameters">The list of parameters.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ToolbarSettings(System.Action{BoldReports.ToolbarSettingsBuilder})">
            <summary>
            Specifies the toolbar settings.
            </summary>
            <param name="toolbarSettings">The toolbar settings.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.PageSettings(System.Action{BoldReports.PageSettingsBuilder})">
            <summary>
            Specifies the page settings.
            </summary>
            <param name="pageSettings">The page settings.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ParameterSettings(System.Action{BoldReports.ParameterSettingsBuilder})">
            <summary>
            Specifies the parameter settings.
            </summary>
            <param name="parameterSettings">The parameter settings.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ExportSettings(System.Action{BoldReports.ExportSettingsBuilder})">
            <summary>
            Specifies the export settings.
            </summary>
            <param name="exportSettings">The export settings.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ParameterSettings(BoldReports.Models.ReportViewer.ParameterSettings)">
            <summary>
            Specifies the parameter settings.
            </summary>
            <param name="parameterSettings">The parameter settings.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ReportServiceUrl(System.String)">
            <summary>
            Specifies the report Web API service url.
            </summary>
            <param name="reportServiceUrl">The report service URL.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ServiceAuthorizationToken(System.String)">
            <summary>
            Authenticate the User Token.
            </summary>
            <param name="serviceAuthorizationToken">Authorization Token.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ReportExport(System.String)">
            <summary>
             Fires while click the Report Export type.If you want to perform any operation when a report Export action is performed, you can make use of the reportExport event.
            </summary>
            <param name="reportExport">The report export.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ExportProgressChanged(System.String)">
            <summary>
             Fires when the Export progress is changed.If you want to perform any operation when a Export progress is changed, you can make use of the exportProgressChanged event.
            </summary>
            <param name="exportProgressChanged">The exportProgress Changed.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.BeforeParameterAdd(System.String)">
            <summary>
             Fires when the parameter UI element added before in the paramter block. If you want to add the custom paramter UI element to the parameter block, you can make use of the beforeParameterAdd event.
            </summary>
            <param name="beforeParameterAdd">The parameter add before.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.PrintProgressChanged(System.String)">
            <summary>
             Fires when the Print progress changed.If you want to perform any operation when a Print progress is changed, you can make use of the printProgressChanged event.
            </summary>
            <param name="printProgressChanged">The printProgress Changed.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ExportItemClick(System.String)">
            <summary>
             Fires when the Export items is clicked.If you want to perform any operation when a Export items clicked, you can make use of the exportItemClick event.
            </summary>
            <param name="exportItemClick">The exportItem Click.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ToolBarItemClick(System.String)">
            <summary>
             Fires when the Toolbar items is clicked.If you want to perform any operation when a Toolbar items clicked, you can make use of the toolBarItemClick event.
            </summary>
            <param name="toolBarItemClick">The toolBarItem Click.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ViewReportClick(System.String)">
            <summary>
             Fires when the View Report is clicked.
            </summary>
            <param name="viewReportClick">The View Report Click.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ParameterUpdateStateChange(System.String)">
            <summary>
            Fires when the dependent parameter value is changing in the parameter block. You can add custom user interface, loading indicator and modify the default progress text, using the ParameterUpdateStateChange event.
            </summary>
            <param name="parameterUpdateStateChange">The View Report Click.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.EnablePageCache(System.Boolean)">
            <summary>
            Gets or sets the enable page cache of the report.
            </summary>
            <param name="enablePageCache">The enable page cache.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.EnablePageVirtualization(System.Boolean)">
            <summary>
            Gets or sets the enable page virtualization of the report.
            </summary>
            <param name="enablePageVirtualization">The enable page virtualization.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.EnableParameterBlockScroller(System.Boolean)">
            <summary>
            Gets or sets the enableParameterBlockScroller of the report.
            </summary>
            <param name="enableParameterBlockScroller">To disable or enable the parameter block scroller.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.SizeToReportContent(System.Boolean)">
            <summary>
            Gets or sets the sizeToReportContent of the report.
            </summary>
            <param name="sizeToReportContent">Render the ReportViewer height based on container size.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.AutoRender(System.Boolean)">
            <summary>
            Gets or sets the autoRender of the report.
            </summary>
            <param name="autoRender">To disable or enable the parameter block scroller.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.EnableDatasourceBlockScroller(System.Boolean)">
            <summary>
            Gets or sets the enableDatasourceBlockScroller of the report.
            </summary>
            <param name="enableDatasourceBlockScroller">To disable or enable the datasource block scroller.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.PrintMode(System.Boolean)">
            <summary>
            Gets or sets the print mode for the report.
            </summary>
            <param name="printMode">The specifies the print mode.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ReportPath(System.String)">
            <summary>
            Gets or sets the path of the report file.
            </summary>
            <param name="reportPath">The report path.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.EnableVirtualEvaluation(System.Boolean)">
            <summary>
            Allows processing a large amount of data with a lesser memory footprint and without performance degradation.
            </summary>
            <param name="enableVirtualEvaluation">true if the report processing is in virtual mode; otherwise, false. The default is false.</param>
            <returns>ReportViewerPropertiesBuilder</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.WaitingPopupTemplate(System.String)">
            <summary>
            Gets or sets the waiting popup template for Report viewer.
            </summary>
            <param name="WaitingPopupTemplate">The WaitingPopupTemplate</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.IsResponsive(System.Boolean)">
            <summary>
            Gets or sets the boolean value of isResponsive Property when window resized.
            </summary>
            <param name="isResponsive">The isResponsive.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.DrillThrough(System.String)">
            <summary>
            Fires during drill through action done in report.If you want to perform any operation when a drill through action is performed, you can make use of the drillThrough event.
            </summary>
            <param name="drillThrough">The drill through.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.Hyperlink(System.String)">
            <summary>
            Fires when a user clicks a hyperlink in the report. If you want to do any customization before performing an action that is specified in the report, you can make use of the event.
            </summary>
            <param name="hyperlink">The hyperlink.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.RenderingBegin(System.String)">
            <summary>
            Fires before report rendering is completed.If you want to perform any operation before the rendering of report,you can make use of the renderingBegin event.
            </summary>
            <param name="renderingBegin">The rendering begin.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.AjaxBeforeLoad(System.String)">
            <summary>
            Fires when ajax call is initiated.If you want to perform any operation when ajax initiated,you can make use of the ajaxBeforeLoad event.
            </summary>
            <param name="ajaxBeforeLoad">The ajax before load.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.AjaxSuccess(System.String)">
            <summary>
            Fires when an ajax request is successfully completed. If you want to perform any operation after the ajax request success, you can make use of the ajaxSuccess event.
            </summary>
            <param name="ajaxSuccess">The ajax success.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.AjaxError(System.String)">
            <summary>
            Fires when ajax request is completes with an error. If you want to perform any operation when ajax request fails, you can make use of the ajaxError event.
            </summary>
            <param name="ajaxError">The ajax error.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ToolbarRendering(System.String)">
            <summary>
            Fires while rendering the Report Viewer toolbar.If you want to perform any operation when rendering toolbar,you can make use of the toolbarRendering event.
            </summary>
            <param name="toolbarRendering">Gets the toolbar rendering event.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.RenderingComplete(System.String)">
            <summary>
            Fires after report rendering completed.If you want to perform any operation after the rendering of report,you can make use of this renderingComplete event.
            </summary>
            <param name="renderingComplete">The rendering complete.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ReportError(System.String)">
            <summary>
            Fires when any error occurred while rendering the report.If you want to perform any operation when an error occurs in the report, you can make use of the reportError event.
            </summary>
            <param name="reportError">The report error.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ShowError(System.String)">
            <summary>
            Fires when user clicks on a failed report item in the rendered report, before displaying error details dialog. If you want to show custom error detail or perform any action before viewing error detail, you can make use of the showError event.
            </summary>
            <param name="showError">The show error.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ProcessingMode(BoldReports.ReportViewerEnums.ProcessingMode)">
            <summary>
            Specifies the processing mode of the report.
            </summary>
            <param name="processingMode">The processing mode.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.RenderMode(BoldReports.ReportViewerEnums.RenderMode)">
            <summary>
            Specifies the render mode of the reportviewer container based on device type.
            </summary>
            <param name="renderMode">The render mode.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.PrintOption(BoldReports.ReportViewerEnums.PrintOptions)">
            <summary>
            Specifies the print option of the reportviewer container based on device type.
            </summary>
            <param name="printOption">The PrintOptions of Report.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ReportLoaded(System.String)">
            <summary>
            Fires when the report is loaded.If you want to perform any operation after the successful loading of report, you can make use of the reportLoaded event.
            </summary>
            <param name="reportLoaded">The report loaded.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ReportServerUrl(System.String)">
            <summary>
            Gets or sets the reports server url.
            </summary>
            <param name="reportServerUrl">The report server URL.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ZoomFactor(System.String)">
            <summary>
            Gets or sets the zoom factor for report viewer.
            </summary>
            <param name="zoomFactor">The zoom factor.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.Locale(System.String)">
            <summary>
            Specifies the locale for report viewer.
            </summary>
            <param name="locale">The locale.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.Render">
            <summary>
            Renders the reportviewer instance.
            </summary>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ToHtmlString">
            <summary>
            Returns an HTML-encoded string.
            </summary>
            <returns>An HTML-encoded string.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.EnableDropDownSearch(System.Boolean)">
            <summary>
            Gets or sets the enable Drop Down Search of the report.
            </summary>
            <param name="enableDropDownSearch">The enable Drop Down Search.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ShowExceptionsInDialog(System.Boolean)">
            <summary>
            Gets or sets the showExceptionsInDialog for report viewer.
            </summary>
            <param name="showExceptionsInDialog">The show exceptions in dialog.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.EnableNotificationBar(System.Boolean)">
            <summary>
            Gets or sets the enable Notification Bar of the report.
            </summary>
            <param name="enableNotificationBar">The enable Notification Bar.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="M:BoldReports.ReportViewerPropertiesBuilder.ReportPrint(System.String)">
            <summary>
            Fires during report print action done in report.If you want to perform any operation when a report print action is performed, you can make use of the ReportPrint event.
            </summary>
            <param name="reportPrint">The report print.</param>
            <returns>ReportViewerPropertiesBuilder.</returns>
        </member>
        <member name="T:BoldReports.ToolbarSettingsBuilder">
            <summary>
            Class for ToolbarSettingsBuilder.
            </summary>
        </member>
        <member name="M:BoldReports.ToolbarSettingsBuilder.#ctor(BoldReports.Models.ReportViewer.ToolbarSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.ToolbarSettingsBuilder"/> class.
            </summary>
            <param name="toolbarSettings">The toolbar settings.</param>
        </member>
        <member name="M:BoldReports.ToolbarSettingsBuilder.ShowToolbar(System.Boolean)">
            <summary>
            Shows or hides the toolbar.
            </summary>
            <param name="value">if set to <c>true</c> [value].</param>
            <returns>ToolbarSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.ToolbarSettingsBuilder.Items(BoldReports.ReportViewerEnums.ToolbarItems)">
            <summary>
            Specifies the toolbar items.
            </summary>
            <param name="value">The value.</param>
            <returns>ToolbarSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.ToolbarSettingsBuilder.ShowTooltip(System.Boolean)">
            <summary>
            Shows or hides the tooltip of toolbar items.
            </summary>
            <param name="value">if set to <c>true</c> [value].</param>
            <returns>ToolbarSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.ToolbarSettingsBuilder.Click(System.String)">
            <summary>
            Fires when user click on toolbar item in the toolbar.
            </summary>
            <param name="value">The value.</param>
            <returns>ToolbarSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.ToolbarSettingsBuilder.TemplateId(System.String)">
            <summary>
            Specifies the toolbar template ID.
            </summary>
            <param name="value">The value.</param>
            <returns>ToolbarSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.ToolbarSettingsBuilder.CustomItems(System.Collections.Generic.List{BoldReports.Models.ReportViewer.CustomItem})">
            <summary>
            Add the Custom Items in the toolbar.
            </summary>
            <param name="value">The value.</param>
            <returns>ToolbarSettingsBuilder.</returns>
        </member>
        <member name="M:BoldReports.ToolbarSettingsBuilder.CustomGroups(System.Collections.Generic.List{BoldReports.Models.ReportViewer.CustomGroup})">
            <summary>
            Add the Custom Groups in the toolbar.
            </summary>
            <param name="value">The value.</param>
            <returns>ToolbarSettingsBuilder.</returns>
        </member>
        <member name="T:BoldReports.ReportViewer">
            <summary>
            Class for ReportViewer control.
            </summary>
        </member>
        <member name="P:BoldReports.ReportViewer.ReportViewerModel">
            <summary>
            Gets or sets the report viewer model.
            </summary>
            <value>The report viewer model.</value>
        </member>
        <member name="P:BoldReports.ReportViewer.TagName">
            <summary>
            Gets the name of the tag.
            </summary>
            <value>The name of the tag.</value>
        </member>
        <member name="P:BoldReports.ReportViewer.PluginName">
            <summary>
            Gets the name of the plugin.
            </summary>
            <value>The name of the plugin.</value>
        </member>
        <member name="P:BoldReports.ReportViewer.Model">
            <summary>
            Gets the ReportViewer model.
            </summary>
            <value>The model.</value>
        </member>
        <member name="M:BoldReports.ReportViewer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.ReportViewer"/> class.
            </summary>
        </member>
        <member name="M:BoldReports.ReportViewer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.ReportViewer"/> class.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:BoldReports.ReportViewer.#ctor(System.String,BoldReports.Models.ReportViewerProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldReports.ReportViewer"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="viewerModel">The viewer model.</param>
        </member>
        <member name="M:BoldReports.ReportViewer.CreateContainer(System.String)">
            <summary>
            Creates the container.
            </summary>
            <param name="controlId">The control identifier.</param>
            <returns>HtmlString.</returns>
        </member>
        <member name="M:BoldReports.ReportViewer.RenderControl(System.String)">
            <summary>
            Renders the control.
            </summary>
            <param name="controlId">The control identifier.</param>
        </member>
        <member name="M:BoldReports.ReportViewer.RenderElement(System.String)">
            <summary>
            Renders the element.
            </summary>
            <param name="controlId">The control identifier.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:BoldReports.ReportViewerEnums.ProcessingMode">
            <summary>
            Defines the support for RDL and RDLC in ReportViewer
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ProcessingMode.Remote">
            <summary>
            The child element is denotes report is RDLC.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ProcessingMode.Local">
            <summary>
            The child element is denotes report is RDL.
            </summary>
        </member>
        <member name="T:BoldReports.ReportViewerEnums.ExportOptions">
            <summary>
            Defines supported Export Options.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ExportOptions.Excel">
            <summary>
            Represents excel export option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ExportOptions.Html">
            <summary>
            Represents html export option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ExportOptions.Pdf">
            <summary>
            Represents pdf export option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ExportOptions.Word">
            <summary>
            Represents Word export option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ExportOptions.PPT">
            <summary>
            Represents ppt export option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ExportOptions.CSV">
            <summary>
            Represents csv export option
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ExportOptions.XML">
            <summary>
            Represents xml export option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ExportOptions.CustomItems">
            <summary>
            Represents custom export option.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ExportOptions.All">
            <summary>
            Represents All kind of export options.
            </summary>
        </member>
        <member name="T:BoldReports.ReportViewerEnums.ToolbarItems">
            <summary>
             Defines supported ToolbarItems items.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ToolbarItems.Export">
            <summary>
            Represents Export item.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ToolbarItems.Zoom">
            <summary>
            Represents Zoom item.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ToolbarItems.PageNavigation">
            <summary>
            Represents PageNavigation item.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ToolbarItems.Refresh">
            <summary>
            Represents Refresh item.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ToolbarItems.Print">
            <summary>
            Represents Print item.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ToolbarItems.DocumentMap">
            <summary>
            Represents DocumentMap item.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ToolbarItems.Parameters">
            <summary>
            Represents Parameters item.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ToolbarItems.PrintLayout">
            <summary>
            Represents PrintLayout item.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ToolbarItems.FittoPage">
            <summary>
            Represents FittoPage item.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ToolbarItems.PageSetup">
            <summary>
            Represents PageSetup item.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ToolbarItems.Stop">
            <summary>
            Represents All kind of toolbar items.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ToolbarItems.ExportSetup">
            <summary>
            Stops Report Processing.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ToolbarItems.All">
            <summary>
            Represents ExportSetup item.
            </summary>
        </member>
        <member name="T:BoldReports.ReportViewerEnums.ToolBarItemType">
            <summary>
             Defines ToolBarItemType.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ToolBarItemType.Default">
            <summary>
            Represents Default type.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ToolBarItemType.Button">
            <summary>
            Represents Button type.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ToolBarItemType.Textbox">
            <summary>
            Represents Textbox type.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ToolBarItemType.Dropdown">
            <summary>
            Represents Dropdown type.
            </summary>
        </member>
        <member name="T:BoldReports.ReportViewerEnums.RenderMode">
            <summary>
             Defines supported Render Mode.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.RenderMode.Default">
            <summary>
            Represents Default render mode.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.RenderMode.Mobile">
            <summary>
            Represents Mobile render mode.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.RenderMode.Desktop">
            <summary>
            Represents Desktop render mode.
            </summary>
        </member>
        <member name="T:BoldReports.ReportViewerEnums.Orientation">
            <summary>
             Defines supported Orientation.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.Orientation.Portrait">
            <summary>
            Represents Portrait orientation.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.Orientation.Landscape">
            <summary>
            Represents Landscape orientation.
            </summary>
        </member>
        <member name="T:BoldReports.ReportViewerEnums.PaperSize">
            <summary>
             Defines supported PaperSize.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PaperSize.A3">
            <summary>
            Represents A3 paper size.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PaperSize.A4">
            <summary>
            Represents A4 paper size.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PaperSize.B4_JIS">
            <summary>
            Represents B4_JIS paper size.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PaperSize.B5_JIS">
            <summary>
            Represents B5_JIS paper size.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PaperSize.Envelope_10">
            <summary>
            Represents Envelope_10 paper size.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PaperSize.Envelope_Monarch">
            <summary>
            Represents Envelope_Monarch paper size.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PaperSize.Executive">
            <summary>
            Represents Executive paper size.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PaperSize.Legal">
            <summary>
            Represents Legal paper size.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PaperSize.Letter">
            <summary>
            Represents Letter paper size.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PaperSize.Tabloid">
            <summary>
            Represents Tabloid paper size.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PaperSize.Custom">
            <summary>
            Represents Custom paper size.
            </summary>
        </member>
        <member name="T:BoldReports.ReportViewerEnums.ExcelFormats">
            <summary>
             Defines supported Excel Formats.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ExcelFormats.Excel97to2003">
            <summary>
            Represents Excel97to2003 version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ExcelFormats.Excel2007">
            <summary>
            Represents Excel2007 version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ExcelFormats.Excel2010">
            <summary>
            Represents Excel2010 version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.ExcelFormats.Excel2013">
            <summary>
            Represents Excel2013 version.
            </summary>
        </member>
        <member name="T:BoldReports.ReportViewerEnums.PPTFormats">
            <summary>
             Defines supported PPT Formats.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PPTFormats.PowerPoint97to2003">
            <summary>
            Represents PowerPoint97to2003 version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PPTFormats.PowerPoint2007">
            <summary>
            Represents PowerPoint2007 version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PPTFormats.PowerPoint2010">
            <summary>
            Represents PowerPoint2010 version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PPTFormats.PowerPoint2013">
            <summary>
            Represents PowerPoint2013 version.
            </summary>
        </member>
        <member name="T:BoldReports.ReportViewerEnums.WordFormats">
            <summary>
             Defines supported Word Formats.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Doc">
            <summary>
            Represents Doc version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Dot">
            <summary>
            Represents Dot version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Docx">
            <summary>
            Represents Docx version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Word2007">
            <summary>
            Represents Word2007 version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Word2010">
            <summary>
            Represents Word2010 version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Word2013">
            <summary>
            Represents Word2013 version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Word2007Dotx">
            <summary>
            Represents Word2007Dotx version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Word2010Dotx">
            <summary>
            Represents Word2010Dotx version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Word2013Dotx">
            <summary>
            Represents Word2013Dotx version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Word2007Docm">
            <summary>
            Represents Word2007Docm version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Word2010Docm">
            <summary>
            Represents Word2010Docm version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Word2013Docm">
            <summary>
            Represents Word2013Docm version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Word2007Dotm">
            <summary>
            Represents Word2007Dotm version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Word2010Dotm">
            <summary>
            Represents Word2010Dotm version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Word2013Dotm">
            <summary>
            Represents Word2013Dotm version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Rtf">
            <summary>
            Represents Rtf version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Txt">
            <summary>
            Represents Txt version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.EPub">
            <summary>
            Represents EPub version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Html">
            <summary>
            Represents Html version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.WordFormats.Xml">
            <summary>
            Represents Xml version.
            </summary>
        </member>
        <member name="T:BoldReports.ReportViewerEnums.PrintOptions">
            <summary>
             Defines supported Print Options.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PrintOptions.Default">
            <summary>
            Represents Default version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PrintOptions.NewTab">
            <summary>
            Represents NewTab version.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.PrintOptions.None">
            <summary>
            Represents None version.
            </summary>
        </member>
        <member name="T:BoldReports.ReportViewerEnums.DateTimePickerType">
            <summary>
             Defines supported DateTime picker UI.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.DateTimePickerType.Default">
            <summary>
            Represents Default UI.
            </summary>
        </member>
        <member name="F:BoldReports.ReportViewerEnums.DateTimePickerType.DateTime">
            <summary>
            Represents DateTime picker UI.
            </summary>
        </member>
    </members>
</doc>
